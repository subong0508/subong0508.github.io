<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Vision</title>
    <description>My personal blog for studying; mainly related to data
</description>
    <link>http://subong0508.github.io/</link>
    <atom:link href="http://subong0508.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 06 Feb 2021 18:35:56 +0900</pubDate>
    <lastBuildDate>Sat, 06 Feb 2021 18:35:56 +0900</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>프로그래머스 Lv2 - 오픈채팅방</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons42888&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42888&quot;&gt;프로그래머스 42888번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(record):
    msgs = []
    user_d = {}
    for r in record:
        lst = r.split()
        if len(lst) == 2:
            continue
        action, uid, name = lst
        user_d[uid] = name
    
    for r in record:
        lst = r.split()
        if len(lst) == 2:
            _, uid = lst
            msg = user_d[uid] + &quot;님이 나갔습니다.&quot;
            msgs.append(msg)
        else:
            action, uid, name = lst
            if action == &quot;Enter&quot;:
                msg = user_d[uid] + &quot;님이 들어왔습니다.&quot;
                msgs.append(msg)
    return msgs
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/06/PR-42888.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/06/PR-42888.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>Heap with Python</title>
        <description>&lt;p&gt;힙이란 우선순위큐(Priority Queue)를 이진 트리로 구현한 자료구조 입니다.
힙의 삽입, 삭제 연산은 $O(\log n)$의 시간복잡도를 가집니다.&lt;/p&gt;

&lt;p&gt;힙은 파이썬 내장모듈인 &lt;code class=&quot;highlighter-rouge&quot;&gt;heapq&lt;/code&gt;를 이용해서 손쉽게 구현할 수 있습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;import heapq

arr = [4, 5, 6, 7, 9, 8, 3, 1, 2]
heapq.heapify(arr)

print(heapq.nsmallest(3, arr)) # 1 2 3
print(heapq.nlargest(3, arr)) # 7 8 9

while arr:
    print(heapq.heappop(arr)) # 1 2 3 4 5 6 7 8 9

data = [5, 4, 6, 3]
for d in data:
    heapq.heappush(arr, d)
    print(arr[0]) # 5 4 4 3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;파이썬의 &lt;code class=&quot;highlighter-rouge&quot;&gt;heapq&lt;/code&gt; 모듈은 최소힙만 지원하므로 최대힙을 구현하기 위해서는 각각의 값들에 -를 붙여서 넣어주고, &lt;code class=&quot;highlighter-rouge&quot;&gt;pop&lt;/code&gt; 연산을 수행할 때 다시 -1을 곱해주는 방법을 사용합니다.&lt;/p&gt;

&lt;p&gt;또한 &lt;strong&gt;Key &amp;amp; Value&lt;/strong&gt; 페어를 통해 힙을 구현할 수도 있습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;keys = [1, 2, 3]
values = ['hello', 'python', 'world']
data = list(zip(keys, values))
h = []
for k, v in data:
    # key, value 순서대로 넣어줌
    heapq.heappush(h, (k, v))

while h:
    k, v = heapq.heappop(h)
    print(&quot;Key: %d, Value: %s&quot; % (k, v)) # Key: 1, Value: hello / Key: 2, Value: python / Key: 3, Value: world /
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/data-structure/2021/02/06/Heap.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/data-structure/2021/02/06/Heap.html</guid>
        
        <category>sorting</category>
        
        <category>python</category>
        
        <category>data-structure</category>
        
        
        <category>Data-Structure</category>
        
      </item>
    
      <item>
        <title>백준 Gold4 - 생태학</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem4358&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/4358&quot;&gt;백준 4358번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;import sys

input = sys.stdin.readline

d = {}
cnt = 0
while True:
    line = input().rstrip()
    if not line:
        break
    cnt += 1
    d[line] = d.get(line, 0) + 1
d = sorted(d.items())

for k, v in d:
    print(&quot;%s %.4f&quot; % (k, 100*v/cnt))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;인풋을 이런식으로 받는 건 못봐서 좀 당황했다.;&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/06/BOJ-4358.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/06/BOJ-4358.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold3 - 중앙값 구하기</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem2696&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2696&quot;&gt;백준 2696번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;import heapq

t = int(input())

def get_median(n, arr):
    # median보다 작은 값들을 저장하는 최대 힙
    max_heap = []
    median = None
    # median보다 큰 값들을 저장하는 최소 힙
    min_heap = []
    res = []
    for i in range(1, n+1):
        if median is None:
            median = arr[i]
            res.append(median)
            continue
        if arr[i] &amp;lt; median:
            heapq.heappush(max_heap, -arr[i])
        else:
            heapq.heappush(min_heap, arr[i])
        if i % 2 == 1:
            # 큰 값들이 작은 값들보다 많을 때
            if len(min_heap) &amp;gt; len(max_heap):
                heapq.heappush(max_heap, -median)
                median = heapq.heappop(min_heap)
            # 작은 값들이 큰 값들보다 많을 때
            elif len(max_heap) &amp;gt; len(min_heap):
                heapq.heappush(min_heap, median)
                median = -heapq.heappop(max_heap)
            res.append(median)
    return res

answer = []
for _ in range(t):
    n = int(input())
    arr = [0] 
    q = n // 10 if n % 10 == 0 else n // 10 + 1
    for i in range(q):
        tmp = list(map(int, input().split()))
        arr.extend(tmp)
    res = get_median(n, arr)
    answer.append((len(res), res))

for num, lst in answer:
    print(num)
    print(*lst, sep=' ')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;중앙값을 저장하는 변수인 &lt;code class=&quot;highlighter-rouge&quot;&gt;median&lt;/code&gt;, 중앙값보다 작은 값들을 저장하는 배열인 &lt;code class=&quot;highlighter-rouge&quot;&gt;max_heap&lt;/code&gt;, 큰 값들을 저장하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;min_heap&lt;/code&gt;을 통해 풀었다.&lt;/p&gt;

&lt;p&gt;그래서 중앙값보다 작은 것들은 최대힙으로, 큰 것들은 최소힙으로 가는데 두 배열의 길이가 다를때는 중앙값을 크기가 더 작은 배열로 보내고, 크기가 더 큰 배열에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;pop&lt;/code&gt; 연산을 통해 새로운 중앙값을 빼오면 된다.&lt;/p&gt;

&lt;p&gt;새로운 중앙값을 빼올때 기존 중앙값보다 작은 배열의 최댓값 또는 기존 중앙값보다 큰 배열의 최솟값을 뽑아야 하므로 각각을 최대/최소힙으로 구현하였다.&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/06/BOJ-2696.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/06/BOJ-2696.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold4 - N번째 큰 수</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem2075&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2075&quot;&gt;백준 2075번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;import heapq

n = int(input())
arr = []
for _ in range(n):
    a = list(map(int, input().split()))
    arr.append(a)

q = []
for i in range(n):
    for j in range(n):
        a = arr[i][j]
        if len(q) &amp;lt; n:
            heapq.heappush(q, a)
        # 지금 넣으려는 원소가 힙의 최솟값보다 클 때만 삽입 =&amp;gt; 공간 복잡도 O(N)
        elif a &amp;gt; q[0]:
            heapq.heappop(q)
            heapq.heappush(q, a)

while len(q) &amp;gt; n:
    heapq.heappop(q)

print(q[0])
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/06/BOJ-2075.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/06/BOJ-2075.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver1 - 최소 힙</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1927&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1927&quot;&gt;백준 1927번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;import heapq

n = int(input())
h = []
res = []
for _ in range(n):
    x = int(input())
    if x != 0:
        heapq.heappush(h, x)
    elif h:
        res.append(heapq.heappop(h))
    else:
        res.append(0)
print(*res, sep='\n')
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/06/BOJ-1927.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/06/BOJ-1927.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver4 - 나는야 포켓몬 마스터 이다솜</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1620&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1620&quot;&gt;백준 1620번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n, m = map(int, input().split())
pocket_num = {}
num_pocket = {}

for i in range(1, n+1):
    p = input()
    pocket_num[p] = i
    num_pocket[i] = p

res = []
for _ in range(m):
    x = input()
    if x.isnumeric():
        res.append(num_pocket[int(x)])
    else:
        res.append(pocket_num[x])
print(*res, sep='\n')
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/06/BOJ-1620.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/06/BOJ-1620.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver3 - 문자열 집합</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem14425&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/14425&quot;&gt;백준 14425번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n, m = map(int, input().split())
s = set()
for _ in range(n):
    string = input()
    s.add(string)

cnt = 0
for _ in range(m):
    string = input()
    if string in s:
        cnt += 1
print(cnt)
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/06/BOJ-14425.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/06/BOJ-14425.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>프로그래머스 Lv3 - 가사 검색</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons60060&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/60060&quot;&gt;프로그래머스 60060번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;from bisect import bisect_left, bisect_right

def count(words, q1, q2):
    return bisect_right(words, q2) - bisect_left(words, q1)

def solution(words, queries):
    words_arr = [[] for _ in range(100001)]
    words_arr_rev = [[] for _ in range(100001)]
    answer = []
    words.sort()
    for w in words:
        words_arr[len(w)].append(w)
        words_arr_rev[len(w)].append(w[::-1])
    for arr in words_arr:
        arr.sort()
    for arr in words_arr_rev:
        arr.sort()
    for q in queries:
        if q[0] != '?':
            q1, q2 = q.replace('?', 'a'), q.replace('?', 'z')
            cnt = count(words_arr[len(q)], q1, q2)
        else:
            q = q[::-1]
            q1, q2 = q.replace('?', 'a'), q.replace('?', 'z')
            cnt = count(words_arr_rev[len(q)], q1, q2)
        answer.append(cnt)
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;다시 풀어봐야 할 것 같다,,&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/05/PR-60060.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/05/PR-60060.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>프로그래머스 Lv3 - 입국심사</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons43238&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/43238&quot;&gt;프로그래머스 43238번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def check(target, n, times):
    cnt = 0
    for t in times:
        cnt += target // t
    return cnt

def solution(n, times):
    l = 1
    r = min(times) * n
    answer = 0
    while l &amp;lt;= r:
        mid = (l + r) // 2
        cnt = check(mid, n, times)
        if cnt &amp;lt; n:
            l = mid + 1
        else:
            answer = mid
            r = mid - 1
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;우선순위큐로 풀까 했지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;이 10억이라 이 방법은 아니겠지 했는데 역시 문제해결의 키는 &lt;code class=&quot;highlighter-rouge&quot;&gt;times&lt;/code&gt;에 있었다.&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/05/PR-43238.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/05/PR-43238.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
  </channel>
</rss>
