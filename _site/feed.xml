<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Vision</title>
    <description>My personal blog for studying; mainly related to data
</description>
    <link>http://subong0508.github.io/</link>
    <atom:link href="http://subong0508.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 06 Feb 2021 00:01:32 +0900</pubDate>
    <lastBuildDate>Sat, 06 Feb 2021 00:01:32 +0900</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>프로그래머스 Lv3 - 입국심사</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons43238&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/43238&quot;&gt;프로그래머스 43238번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def check(target, n, times):
    cnt = 0
    for t in times:
        cnt += target // t
    return cnt

def solution(n, times):
    l = 1
    r = min(times) * n
    answer = 0
    while l &amp;lt;= r:
        mid = (l + r) // 2
        cnt = check(mid, n, times)
        if cnt &amp;lt; n:
            l = mid + 1
        else:
            answer = mid
            r = mid - 1
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;우선순위큐로 풀까 했지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;이 10억이라 이 방법은 아니겠지 했는데 역시 문제해결의 키는 &lt;code class=&quot;highlighter-rouge&quot;&gt;times&lt;/code&gt;에 있었다.&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/05/PR-43238.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/05/PR-43238.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver1 - 공유기 설치</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem2110&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2110&quot;&gt;백준 2110번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n, c = map(int, input().split())
arr = [0] * n
for i in range(n):
    arr[i] = int(input())
arr.sort()


def is_possible(minlen):
    i = 0
    cnt = 1
    while i &amp;lt; len(arr):
        prev = arr[i]
        j = i+1
        while j &amp;lt; len(arr) and (arr[j]-prev) &amp;lt; minlen:
            j += 1
        if j &amp;lt; len(arr):
            cnt += 1
        i = j
    return cnt &amp;gt;= c
    

l = 0
r = arr[-1] - arr[0]
res = l
while l &amp;lt;= r:
    mid = (l + r) // 2
    if is_possible(mid):
        res = mid
        l = mid + 1
    else:
        r = mid - 1

print(res)
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Fri, 05 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/05/BOJ-2110.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/05/BOJ-2110.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold3 - 드래곤 앤 던전</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem16434&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/16434&quot;&gt;백준 16434번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n, atk = map(int, input().split())
rooms = [0] * n
for i in range(n):
    t, a, h = map(int, input().split())
    rooms[i] = [t, a, h]


def fight(maxhp):
    tmp_atk = atk
    curhp = maxhp
    for t, a, h in rooms:
        if t == 1:
            num_attacks = h // tmp_atk
            if h % tmp_atk != 0:
                num_attacks += 1
            # 용이 먼저 죽기 때문
            curhp -= a * (num_attacks-1)
        else:
            tmp_atk += a
            curhp += h
        if curhp &amp;lt;= 0:
            return False
        curhp = min(curhp, maxhp)
    return True

l = 1
r = 0
for t, a, h in rooms:
    if t == 1:
        r += a * (h // atk + 1)

ans = r
while l &amp;lt;= r:
    mid = (l + r) // 2
    if fight(mid):
        ans = mid
        r = mid - 1
    else:
        l = mid + 1
print(ans)
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Fri, 05 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/05/BOJ-16434.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/05/BOJ-16434.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold4 - K번째 수</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1300&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1300&quot;&gt;백준 1300번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
k = int(input())

l = 0
r = n*n
ans = -1
while l &amp;lt;= r:
    mid = (l + r) // 2
    cnt = 0
    for i in range(1, n+1):
        cnt += min(n, mid // i)
    if cnt &amp;lt; k:
        l = mid + 1
    else:
        ans = mid
        r = mid - 1
print(ans)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ㅠ 다시 풀어봐야할듯…&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/05/BOJ-1300.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/05/BOJ-1300.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>프로그래머스 Lv3 - 가사 검색</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons60060&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/60060&quot;&gt;프로그래머스 60060번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;from bisect import bisect_left, bisect_right

def count(words, q1, q2):
    return bisect_right(words, q2) - bisect_left(words, q1)

def solution(words, queries):
    words_arr = [[] for _ in range(100001)]
    words_arr_rev = [[] for _ in range(100001)]
    answer = []
    words.sort()
    for w in words:
        words_arr[len(w)].append(w)
        words_arr_rev[len(w)].append(w[::-1])
    for arr in words_arr:
        arr.sort()
    for arr in words_arr_rev:
        arr.sort()
    for q in queries:
        if q[0] != '?':
            q1, q2 = q.replace('?', 'a'), q.replace('?', 'z')
            cnt = count(words_arr[len(q)], q1, q2)
        else:
            q = q[::-1]
            q1, q2 = q.replace('?', 'a'), q.replace('?', 'z')
            cnt = count(words_arr_rev[len(q)], q1, q2)
        answer.append(cnt)
    return answer
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Thu, 04 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/04/PR-60060.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/04/PR-60060.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>프로그래머스 Lv3 - 징검다리 건너기</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons64062&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/64062&quot;&gt;프로그래머스 64062번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def run_possible(stones, n, k):
    stones = stones.copy()
    # (n-1)명이 징검다리를 건넌 후 결과
    stones = [max(0, x-n+1) for x in stones]
    i = 0
    while i &amp;lt; len(stones):
        if stones[i] &amp;gt; 0:
            i += 1
        else:
            j = i+1
            # 0의 연속된 갯수
            while j &amp;lt; len(stones) and stones[j] &amp;lt;= 0:
                j += 1
            # 0이 k개 이상 연속되면 건널 수 없다.
            if j-i &amp;gt;= k:
                return False
            i = j
    return True

def solution(stones, k):
    l = 1
    r = sum(stones)
    answer = l
    while l &amp;lt;= r:
        mid = (l + r) // 2
        if run_possible(stones, mid, k):
            # 현재 값 저장
            answer = mid
            l = mid + 1
        else:
            r = mid - 1
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;처음에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;run_possible&lt;/code&gt; 함수를 &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;명이 직접 건너는 걸로 짰는데 효율성 테스트에서 전멸을 당했다.&lt;/p&gt;

&lt;p&gt;그런데 문제의 조건에서 &lt;strong&gt;단, 다음으로 밟을 수 있는 디딤돌이 여러 개인 경우 무조건 가장 가까운 디딤돌로만 건너뛸 수 있습니다.&lt;/strong&gt; 라고 했기 때문에 0인 디딤돌 바로 다음으로 건너야 한다.&lt;/p&gt;

&lt;p&gt;이 말은 0이 k개 이상 연속되면 건널 수 없다는 소리이기 때문에 $O(n)$으로 짤 수 있었다.&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/04/PR-64062.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/04/PR-64062.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold2 - 합이 0인 네 정수</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem7453&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/7453&quot;&gt;백준 7453번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
A = [0] * n
B = [0] * n
C = [0] * n
D = [0] * n

for i in range(n):
    a, b, c, d = map(int, input().split())
    A[i] = a
    B[i] = b
    C[i] = c
    D[i] = d

left = []
right = []

for i in range(n):
    for j in range(n):
        left.append(A[i]+B[j])
        right.append(C[i]+D[j])

d = {}
for r in right:
    d[r] = d.get(r, 0) + 1

res = 0
for l in left:
    target = 0 - l
    res += d.get(target, 0)
print(res)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;원래 이분탐색으로 풀었다가 시간초과해서 딕셔너리로 바꿨다. ㅠ&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/04/BOJ-7453.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/04/BOJ-7453.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver2 - 기타 레슨</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem2343&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2343&quot;&gt;백준 2343번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n, m = map(int, input().split())
arr = list(map(int, input().split()))


def is_possible(size):
    total = 0
    cnt = 1
    for i in range(n):
        if total + arr[i] &amp;gt; size:
            cnt += 1
            total = arr[i]
        else:
            total += arr[i] 
    return cnt &amp;lt;= m 


l = 1
r = sum(arr)
max_val = max(arr)
res = r
while l &amp;lt;= r:
    mid = (l + r) // 2
    if mid &amp;gt;= max_val and is_possible(mid):
        res = mid
        r = mid - 1
    else:
        l = mid + 1

print(res)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mid &amp;gt;= max_val&lt;/code&gt; 라는 조건을 못 생각해서 다른 분들의 풀이를 보고서야 이해했다. 항상 블루레이의 크기 레슨의 최댓값 이상이어야한다.&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/04/BOJ-2343.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/04/BOJ-2343.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver3 - 랜선 자르기</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1654&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1654&quot;&gt;백준 1654번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;k, n = map(int, input().split())
arr = [0] * k
for i in range(k):
    arr[i] = int(input())


def get_num(arr, length):
    cnt = 0
    for a in arr:
        cnt += a // length
    return cnt


l = 1
r = sum(arr)
res = 0

while l &amp;lt;= r:
    mid = (l + r) // 2
    ans = get_num(arr, mid)
    if ans &amp;gt;= n:
        res = mid
        l = mid+1
    else:
        r = mid-1

print(res)
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 04 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/04/BOJ-1654.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/04/BOJ-1654.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver3 - 게임</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1072&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1072&quot;&gt;백준 1072번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;x, y = map(int, input().split())
z = int(100 * y / x)

l = 1
r = x
res = -1

while l &amp;lt;= r:
    mid = (l + r) // 2
    new_z = int(100 * (y+mid) / (x+mid))
    if new_z &amp;lt;= z:
        l = mid + 1
    else:
        res = mid
        r = mid - 1

print(res)
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 04 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/04/BOJ-1072.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/04/BOJ-1072.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
  </channel>
</rss>
