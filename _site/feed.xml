<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Vision</title>
    <description>My personal blog for studying; mainly related to data
</description>
    <link>http://subong0508.github.io/</link>
    <atom:link href="http://subong0508.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 29 Jan 2021 13:38:10 +0900</pubDate>
    <lastBuildDate>Fri, 29 Jan 2021 13:38:10 +0900</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>프로그래머스 Lv2 - 기능개발</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons42586&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42586&quot;&gt;프로그래머스 42586번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;문제 설명&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.&lt;/p&gt;

&lt;p&gt;또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.&lt;/p&gt;

&lt;p&gt;먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제한 사항&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;작업의 개수(progresses, speeds배열의 길이)는 100개 이하입니다.&lt;/li&gt;
  &lt;li&gt;작업 진도는 100 미만의 자연수입니다.&lt;/li&gt;
  &lt;li&gt;작업 속도는 100 이하의 자연수입니다.&lt;/li&gt;
  &lt;li&gt;배포는 하루에 한 번만 할 수 있으며, 하루의 끝에 이루어진다고 가정합니다. 예를 들어 진도율이 95%인 작업의 개발 속도가 하루에 4%라면 배포는 2일 뒤에 이루어집니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;입출력 예&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;progresses&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;speeds&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;return&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[93, 30, 55]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;[1, 30, 5]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;[2, 1]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[95, 90, 99, 99, 80, 99]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;[1, 1, 1, 1, 1, 1]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;[1, 3, 2]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;예시설명&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;입출력 예 #1
첫 번째 기능은 93% 완료되어 있고 하루에 1%씩 작업이 가능하므로 7일간 작업 후 배포가 가능합니다.
두 번째 기능은 30%가 완료되어 있고 하루에 30%씩 작업이 가능하므로 3일간 작업 후 배포가 가능합니다. 하지만 이전 첫 번째 기능이 아직 완성된 상태가 아니기 때문에 첫 번째 기능이 배포되는 7일째 배포됩니다.
세 번째 기능은 55%가 완료되어 있고 하루에 5%씩 작업이 가능하므로 9일간 작업 후 배포가 가능합니다.&lt;/p&gt;

&lt;p&gt;따라서 7일째에 2개의 기능, 9일째에 1개의 기능이 배포됩니다.&lt;/p&gt;

&lt;p&gt;입출력 예 #2
모든 기능이 하루에 1%씩 작업이 가능하므로, 작업이 끝나기까지 남은 일수는 각각 5일, 10일, 1일, 1일, 20일, 1일입니다. 어떤 기능이 먼저 완성되었더라도 앞에 있는 모든 기능이 완성되지 않으면 배포가 불가능합니다.&lt;/p&gt;

&lt;p&gt;따라서 5일째에 1개의 기능, 10일째에 3개의 기능, 20일째에 2개의 기능이 배포됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;from collections import deque

def solution(progresses, speeds):
    # popleft: O(1)를 위해 deque로 바꿔준다.
    progresses = deque(progresses)
    speeds = deque(speeds)
    answer = []
    while progresses:
        while progresses[0] &amp;lt; 100:
            progresses = deque(map(lambda x, y:  x+y, progresses,
                              speeds))
        cnt = 0
        # 배포가 가능한 것들을 차례대로 배포
        while progresses and progresses[0] &amp;gt;= 100:
            progresses.popleft()
            speeds.popleft()
            cnt += 1
        answer.append(cnt)
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;큐 구조를 이용해서 풀 수 있는 문제였다.&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/01/28/PR-42586.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/01/28/PR-42586.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>프로그래머스 Lv2 - 주식가격</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons42584languagepython3&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42584?language=python3&quot;&gt;프로그래머스 42584번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;문제 설명&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제한 사항&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;prices의 각 가격은 1 이상 10,000 이하인 자연수입니다.&lt;/li&gt;
  &lt;li&gt;prices의 길이는 2 이상 100,000 이하입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;입출력 예&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;prices&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;return&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[1, 2, 3, 2, 3]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;[4, 3, 1, 1, 0]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;입출력 예 설명&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1초 시점의 ₩1은 끝까지 가격이 떨어지지 않았습니다.&lt;/li&gt;
  &lt;li&gt;2초 시점의 ₩2은 끝까지 가격이 떨어지지 않았습니다.&lt;/li&gt;
  &lt;li&gt;3초 시점의 ₩3은 1초뒤에 가격이 떨어집니다. 따라서 1초간 가격이 떨어지지 않은 것으로 봅니다.&lt;/li&gt;
  &lt;li&gt;4초 시점의 ₩2은 1초간 가격이 떨어지지 않았습니다.&lt;/li&gt;
  &lt;li&gt;5초 시점의 ₩3은 0초간 가격이 떨어지지 않았습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(틀린 풀이)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;from collections import deque

def solution(prices):
    answer = [0] * len(prices)
    for i in range(len(prices)-1):
        prices_ = deque(prices[i:])
        p = prices[i]
        cnt = 0
        while prices_ and prices_[0] &amp;gt;= p:
            cnt += 1
            prices_.popleft()
        # 남아있는 경우
        if prices_:
            answer[i] = cnt
        # 끝까지 안떨어진 경우
        else:
            answer[i] = cnt-1
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;이렇게 풀었더니 시간 복잡도가 $O(n^2)$이 되어서 효율성 테스트에서 틀려버리고 말았다.&lt;/p&gt;

&lt;p&gt;그래서 &lt;a href=&quot;https://gurumee92.tistory.com/170&quot;&gt;링크&lt;/a&gt;의 풀이법을 참조했다.&lt;/p&gt;

&lt;p&gt;(맞는 풀이)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(prices):
    answer = [0] * len(prices)
    stack = []
    # i: 현재 시간
    for i in range(len(prices)):
        while stack and prices[i] &amp;lt; prices[stack[-1]]:
            top = stack.pop()
            answer[top] = i-top
        stack.append(i)
    while stack:
        top = stack.pop()
        answer[top] = len(prices)-1-top
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;이 문제의 핵심은 스택을 사용해서 스택에 주식이 안 떨어진 &lt;strong&gt;시간&lt;/strong&gt;을 저장하는 것이다. 주식이 떨어졌을 때는 스택에서 계속 &lt;code class=&quot;highlighter-rouge&quot;&gt;pop&lt;/code&gt; 연산을 수행하면서 마지막 시간을 체크해야한다.&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/01/28/PR-42584.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/01/28/PR-42584.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>스택, 큐 with Python</title>
        <description>&lt;p&gt;이번 포스팅에서는 스택, 큐에 대한 개념을 알아보고 파이썬으로 간단하게 구현해보겠습니다.&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;스택&lt;/h1&gt;

&lt;p&gt;스택은 &lt;strong&gt;LIFO&lt;/strong&gt;(후입선출)의 특성을 가진 자료구조입니다. 시간복잡도는 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;삽입: $O(1)$&lt;/li&gt;
  &lt;li&gt;삭제: $O(1)$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;파이썬에서는 다른 라이브러리를 쓸 필요없이 기본 자료형인 &lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;를 활용하여 삽입 및 삭제 연산을 수행할 수 있습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;arr = [1, 2, 3, 4, 5]
stack = []

# 삽입
for a in arr:
    stack.append(a)
print(stack)

# 삭제
while stack:
    print(stack.pop())
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;section-1&quot;&gt;큐&lt;/h1&gt;

&lt;p&gt;큐는 기본적으로 &lt;strong&gt;FIFO&lt;/strong&gt;(선입선출)의 특성을 띄는 자료구조입니다. 시간복잡도는 앞서 설명한 스택과 동일합니다.&lt;/p&gt;

&lt;p&gt;주의해야할 점은 스택과 다르게 파이썬의 기본 자료구조인 &lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;를 사용해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;pop(0)&lt;/code&gt;을 통해 삭제연산을 수행하면 시간복잡도가 $O(n)$이 된다는 것입니다.&lt;/p&gt;

&lt;p&gt;따라서 &lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;를 쓰기보다는 파이썬에서는 내장 모듈인 &lt;code class=&quot;highlighter-rouge&quot;&gt;collections&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;deque&lt;/code&gt;을 쓰면 간단하게 구현할 수 있습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;from collections import deque

q = deque()

# 삽입
arr = [1, 2, 3, 4, 5]
for a in arr:
    q.append(a)

# peek
print(q[0])

# pop
# popleft 말고 pop을 쓰면 선입선출
while q:
    print(q.popleft())
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 28 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/data-structure/2021/01/28/Stack,-Queue.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/data-structure/2021/01/28/Stack,-Queue.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Data-Structure</category>
        
      </item>
    
      <item>
        <title>JSP 정리</title>
        <description>&lt;p&gt;&lt;strong&gt;본 게시글은 인프런 강좌(&lt;a href=&quot;https://www.inflearn.com/course/%EC%8B%A4%EC%A0%84-jsp_renew/dashboard&quot;&gt;링크&lt;/a&gt;)를 듣고 요약한 글입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;servlet-&quot;&gt;Servlet 맵핑&lt;/h2&gt;
&lt;h3 id=&quot;servlet--1&quot;&gt;Servlet 맵핑이란?&lt;/h3&gt;

&lt;p&gt;유저가 full path를 입력하는 것은 번거롭고 보안에 취약하다. 따라서 mapping path를 만들어서 간결한 닉네임을 준다. 이 기법을 &lt;strong&gt;Servlet 맵핑&lt;/strong&gt;이라고 부른다.&lt;/p&gt;

&lt;h3 id=&quot;webxml---&quot;&gt;web.xml 파일을 이용한 맵핑&lt;/h3&gt;

&lt;p&gt;Servlet 파일이 다음과 같다고 하자.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;servlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.PrintWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.annotation.WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServletRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServletResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/HelloServlet&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloServlet&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serialVersionUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
       
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HelloServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;html&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;head&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;/head&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;p&amp;gt;Hello Servlet!&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;/html&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doPost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;web.xml 파일을 다음과 같이 바꿔보자.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;web-app&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WebApp_ID&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3.1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;display-name&amp;gt;&lt;/span&gt;prj5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/display-name&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;welcome-file-list&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;welcome-file&amp;gt;&lt;/span&gt;index.html&lt;span class=&quot;nt&quot;&gt;&amp;lt;/welcome-file&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;welcome-file&amp;gt;&lt;/span&gt;index.htm&lt;span class=&quot;nt&quot;&gt;&amp;lt;/welcome-file&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;welcome-file&amp;gt;&lt;/span&gt;index.jsp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/welcome-file&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;welcome-file&amp;gt;&lt;/span&gt;default.html&lt;span class=&quot;nt&quot;&gt;&amp;lt;/welcome-file&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;welcome-file&amp;gt;&lt;/span&gt;default.htm&lt;span class=&quot;nt&quot;&gt;&amp;lt;/welcome-file&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;welcome-file&amp;gt;&lt;/span&gt;default.jsp&lt;span class=&quot;nt&quot;&gt;&amp;lt;/welcome-file&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/welcome-file-list&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 가명 --&amp;gt;&lt;/span&gt;
  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;servletEx&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-class&amp;gt;&lt;/span&gt;com.servlet.HelloServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;servletEx&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/SE&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/web-app&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;이 방법은 &lt;code class=&quot;highlighter-rouge&quot;&gt;com.sevlet&lt;/code&gt; 패키지 안에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;HelloServlet.java&lt;/code&gt; 파일에 &lt;code class=&quot;highlighter-rouge&quot;&gt;servletEx&lt;/code&gt;라는 가명을 붙여주고 url을 &lt;code class=&quot;highlighter-rouge&quot;&gt;/SE&lt;/code&gt;로 바꾼 과정이다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;http://localhost:포트번호/프로젝트이름/SE&lt;/a&gt;로 가면 
잘 작동되었음을 알 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;java-annotation--&quot;&gt;Java Annotation을 이용한 맵핑&lt;/h3&gt;

&lt;p&gt;또는 간단하게 직접 java파일을 바꿔줄 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;servlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.PrintWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.annotation.WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServletRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServletResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;nd&quot;&gt;@WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/SE1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloServlet&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serialVersionUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
       
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HelloServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;html&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;head&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;/head&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;p&amp;gt;Hello Servlet!&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;/html&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doPost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;이렇게 하면 &lt;a href=&quot;&quot;&gt;http://localhost:포트번호/프로젝트이름/SE1&lt;/a&gt;로도 같은 페이지에 접근가능하다.&lt;/p&gt;

&lt;h2 id=&quot;servlet-request-response&quot;&gt;Servlet request, response&lt;/h2&gt;

&lt;h3 id=&quot;httpservlet&quot;&gt;HttpServlet&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HttpServlet&lt;/code&gt;을 상속받아 http 프로토콜을 이용한다.&lt;/p&gt;

&lt;h3 id=&quot;httpservletrequest-httpservletresponse&quot;&gt;HttpServletRequest, HttpServletResponse&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;doGet, doPost&lt;/code&gt; 모두 &lt;code class=&quot;highlighter-rouge&quot;&gt;HttpServletRequest, HttpServletResponse&lt;/code&gt;를 파라미터로 받는다. &lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt;는 요청에 대한 정보를 담고 있는 객체, &lt;code class=&quot;highlighter-rouge&quot;&gt;response&lt;/code&gt;는 응답에 대한 정보를 담고 있는 객체이다.&lt;/p&gt;

&lt;p&gt;&amp;lt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt;의 주요 메소드&amp;gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request.getCookies()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request.getSession()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request.getAttribute(null)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request.setAttribute(null, null)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request.getParameter(null)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request.getParameterNames()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request.getParameterValues(null)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;lt;&lt;code class=&quot;highlighter-rouge&quot;&gt;response&lt;/code&gt;의 주요 메소드&amp;gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;response.addCookie(null)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;response.getStatus()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;response.sendRedirect(null)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;response.getWriter()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;response.getOutputStream()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;servlet-life-cycle&quot;&gt;Servlet Life-Cycle&lt;/h2&gt;
</description>
        <pubDate>Thu, 28 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/backend/2021/01/28/JSP.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/backend/2021/01/28/JSP.html</guid>
        
        <category>backend</category>
        
        <category>server</category>
        
        <category>jsp</category>
        
        <category>servlet</category>
        
        
        <category>Backend</category>
        
      </item>
    
      <item>
        <title>백준 Silver4 - 괄호</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem9012&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/9012&quot;&gt;백준 9012번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;문제&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;괄호 문자열(Parenthesis String, PS)은 두 개의 괄호 기호인 ‘(’ 와 ‘)’ 만으로 구성되어 있는 문자열이다. 그 중에서 괄호의 모양이 바르게 구성된 문자열을 올바른 괄호 문자열(Valid PS, VPS)이라고 부른다. 한 쌍의 괄호 기호로 된 “( )” 문자열은 기본 VPS 이라고 부른다. 만일 x 가 VPS 라면 이것을 하나의 괄호에 넣은 새로운 문자열 “(x)”도 VPS 가 된다. 그리고 두 VPS x 와 y를 접합(concatenation)시킨 새로운 문자열 xy도 VPS 가 된다. 예를 들어 “(())()”와 “((()))” 는 VPS 이지만 “(()(”, “(())()))” , 그리고 “(()” 는 모두 VPS 가 아닌 문자열이다.&lt;/p&gt;

&lt;p&gt;여러분은 입력으로 주어진 괄호 문자열이 VPS 인지 아닌지를 판단해서 그 결과를 YES 와 NO 로 나타내어야 한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;입력&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;입력 데이터는 표준 입력을 사용한다. 입력은 T개의 테스트 데이터로 주어진다. 입력의 첫 번째 줄에는 입력 데이터의 수를 나타내는 정수 T가 주어진다. 각 테스트 데이터의 첫째 줄에는 괄호 문자열이 한 줄에 주어진다. 하나의 괄호 문자열의 길이는 2 이상 50 이하이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;출력&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;출력은 표준 출력을 사용한다. 만일 입력 괄호 문자열이 올바른 괄호 문자열(VPS)이면 “YES”, 아니면 “NO”를 한 줄에 하나씩 차례대로 출력해야 한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;예제&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;입력&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;6
(())())
(((()())()
(()())((()))
((()()(()))(((())))()
()()()()(()()())()
(()((())()(
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;출력&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NO
NO
YES
NO
YES
NO
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;t = int(input())
res = []

def is_vps(string):
    stack = []
    for ch in string:
        if ch == '(':
            stack.append(ch)
        else:
            if not stack or stack.pop() != '(':
                return False
    return len(stack) == 0


for _ in range(t):
    string = input()
    if is_vps(string):
        res.append(&quot;YES&quot;)
    else:
        res.append(&quot;NO&quot;)

print(*res, sep='\n')
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 28 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/01/28/BOJ-9012.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/01/28/BOJ-9012.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver4 - 카드2</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem2164&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2164&quot;&gt;백준 2164번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;문제&lt;/strong&gt;&lt;br /&gt;
N장의 카드가 있다. 각각의 카드는 차례로 1부터 N까지의 번호가 붙어 있으며, 1번 카드가 제일 위에, N번 카드가 제일 아래인 상태로 순서대로 카드가 놓여 있다.&lt;/p&gt;

&lt;p&gt;이제 다음과 같은 동작을 카드가 한 장 남을 때까지 반복하게 된다. 우선, 제일 위에 있는 카드를 바닥에 버린다. 그 다음, 제일 위에 있는 카드를 제일 아래에 있는 카드 밑으로 옮긴다.&lt;/p&gt;

&lt;p&gt;예를 들어 N=4인 경우를 생각해 보자. 카드는 제일 위에서부터 1234 의 순서로 놓여있다. 1을 버리면 234가 남는다. 여기서 2를 제일 아래로 옮기면 342가 된다. 3을 버리면 42가 되고, 4를 밑으로 옮기면 24가 된다. 마지막으로 2를 버리고 나면, 남는 카드는 4가 된다.&lt;/p&gt;

&lt;p&gt;N이 주어졌을 때, 제일 마지막에 남게 되는 카드를 구하는 프로그램을 작성하시오.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;입력&lt;/strong&gt;&lt;br /&gt;
첫째 줄에 정수 N(1 ≤ N ≤ 500,000)이 주어진다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;from collections import deque

n = int(input())
q = deque()
for i in range(1, n+1):
    q.append(i)

while len(q) &amp;gt; 1:
    q.popleft()
    if len(q) == 1:
        break
    q.append(q.popleft())

print(q.pop())
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 28 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/01/28/BOJ-2164.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/01/28/BOJ-2164.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver3 - 과제는 끝나지 않아!</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem17952&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/17952&quot;&gt;백준 17952번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;문제&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;성애는 이번 학기에 전공을 정말 많이 듣는다. 이로 인해 거의 매일을 과제를 하면서 보내고 있다. 그런데도 과제가 줄어들 기미가 보이지 않는데, 바로 분단위로 과제가 추가되고 있기 때문이다. 다행히 과제 제출 기한은 학기가 끝날 때까지이다. 너무나도 많은 과제를 하다가 미쳐버린 성애는 아래와 같은 규칙으로 과제를 해 나가고 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;과제는 가장 최근에 나온 순서대로 한다. 또한 과제를 받으면 바로 시작한다.&lt;/li&gt;
  &lt;li&gt;과제를 하던 도중 새로운 과제가 나온다면, 하던 과제를 중단하고 새로운 과제를 진행한다.&lt;/li&gt;
  &lt;li&gt;새로운 과제가 끝났다면, 이전에 하던 과제를 이전에 하던 부분부터 이어서 한다. (성애는 기억력이 좋기 때문에 아무리 긴 시간이 지나도 본인이 하던 부분을 기억할 수 있다.)
성애는 과제를 받자마자 이 과제가 몇 분이 걸릴지 정확하게 알 수 있고, 성애가 제출한 과제는 무조건 만점을 받는다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;성애는 이번 학기에 자기가 받을 과제 점수를 예상해보고 싶다. 하지만 과제 점수를 예상하는 지금도 과제가 추가되고 있기에 여유를 부릴 수가 없다. 여러분이 성애가 받을 과제 점수를 구해주자!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;입력&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;첫째 줄에 이번 학기가 몇 분인지를 나타내는 정수 N이 주어진다. (1 ≤ N ≤ 1,000,000)&lt;/p&gt;

&lt;p&gt;두번째 줄부터 N줄 동안은 학기가 시작하고 N분째에 주어진 과제의 정보가 아래의 두 경우 중 하나로 주어진다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 A T: 과제의 만점은 A점이고, 성애가 이 과제를 해결하는데 T분이 걸린다. A와 T는 모두 정수이다. (1 ≤ A ≤ 100, 1 ≤ T ≤ 1,000,000)&lt;/li&gt;
  &lt;li&gt;0: 해당 시점에는 과제가 주어지지 않았다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;출력&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;성애가 받을 과제 점수를 출력한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;예제&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;입력&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3
1 100 3
0
0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;출력&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;100
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())

hw = []
res = 0
for i in range(n):
    now = input()
    if now != '0':
        _, score, time = map(int, now.split())
        hw.append([score, time])
    if hw:
        hw[-1][1] -= 1
        if hw[-1][1] == 0:
            res += hw[-1][0]
            hw.pop()

print(res)
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 28 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/01/28/BOJ-17952.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/01/28/BOJ-17952.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver1 - 세훈이의 선물가게</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem17225&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/17225&quot;&gt;백준 17225번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;문제&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;세훈이는 선물가게를 운영한다. 세훈이의 선물가게는 특이하게도 손님이 어떤 선물을 구매할지 선택할 수가 없다. 대신 세훈이의 취향으로 랜덤하게 준비된 선물 중 몇 개를 구매할 것인지, 파란색과 빨간색 중 어떤 색으로 포장 받을 것인지만 결정해 주문할 수 있다.&lt;/p&gt;

&lt;p&gt;상민이와 지수는 세훈이의 가게에서 선물 포장을 맡은 아르바이트생이다. 손님들은 파란색 포장지를 원하면 상민이에게, 빨간색 포장지를 원하면 지수에게 주문을 한다. 두 사람은 각자 주문을 받으면 그때부터 포장을 시작하는데, 현재 남아있는 선물 중 가장 앞에 있는 선물을 가져와 포장하고 주문을 받은 개수만큼 이를 반복하는 형태다. 이때 선물 하나를 포장하는 데 상민이는 A초, 지수는 B초가 걸린다. 두 사람 모두 받거나 밀린 주문이 없는데 미리 선물을 가져오거나 포장하는 일은 없으며, &lt;strong&gt;두 사람이 동시에 선물을 가져올 때는 알바짬이 조금 더 있는 상민이가 먼저 가져오고, 지수가 그 뒤의 선물을 가져온다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;세훈이는 어제 구매한 선물이 망가져 있다는 항의 전화를 받았다. 자신이 준비한 선물에는 문제가 없었기에 손님에게 포장지의 색을 물었지만, 손님은 자신이 받은 선물이 무엇인지만 말하며 화를 낼 뿐이었다. 어쩔 수 없이 세훈이는 어제 가게를 방문한 손님들의 주문 내역을 보고 그 선물을 누가 포장했는지 파악하려 한다.&lt;/p&gt;

&lt;p&gt;방문한 손님의 수와 각 손님이 주문한 시각, 선택한 포장지, 포장 받을 선물의 개수가 주어졌을 때 상민이와 지수가 각자 어떤 선물들을 포장했는지 알아내는 프로그램을 작성해보자.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;입력&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;첫 줄에 상민이가 선물 하나를 포장하는 데 걸리는 시간 A, 지수가 선물 하나를 포장하는 데 걸리는 시간 B, 어제 세훈이 가게의 손님 수 N(1 ≤ N ≤ 1,000)이 주어진다.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;이후 N개의 줄에 걸쳐 1번부터 N번 손님의 주문 시각 ti(1 ≤ ti ≤ 86,400), 선택한 포장지의 색깔 ci(ci = “B”&lt;/td&gt;
      &lt;td&gt;“R”), 주문한 선물의 개수 mi(1 ≤ mi ≤ 100)가 주어진다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;ti는 가게가 오픈한 지 ti초 후에 손님이 주문했음을 뜻하며 ci는 포장지의 색깔을 의미하는 알파벳으로 “B”는 파란색을, “R”은 빨간색을 의미한다. 주어지는 입력은 시간의 흐름에 맞게 ti의 오름차순으로 주어지며, 서로 같은 시간에 주문한 손님은 없다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;출력&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;첫 번째 줄에 상민이가 포장한 선물의 개수를 출력한다. 이후 두 번째 줄에 상민이가 포장한 선물들의 번호를 오름차순으로 공백으로 구분하여 출력한다.&lt;/p&gt;

&lt;p&gt;세 번째 줄에 지수가 포장한 선물의 개수를 출력한다. 이후 네 번째 줄에 지수가 포장한 선물들의 번호를 오름차순으로 공백으로 구분하여 출력한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;예제&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;입력&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0 0 3
1 B 3
4 R 2
7 R 2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;출력&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3
1 2 3
4
4 5 6 7
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;a, b, n = map(int, input().split())
maxb = maxr = 0
q = []
for _ in range(n):
    t, c, m = input().split()
    t, m = map(int, [t, m])
    if c == 'B':
        # 상민이가 포장가능한 시간
        t = max(t, maxb)
        for j in range(m):
            q.append([t, c])
            t += a
        maxb = t
    else:
        # 지수가 포장가능한 시간
        t = max(t, maxr)
        for j in range(m):
            q.append([t, c])
            t += b
        maxr = t

q = sorted(q, key=lambda x: -ord(x[1]))
q = sorted(q, key=lambda x: -x[0])

res = [[], []]
idx = 0
while q:
    idx += 1
    _, c = q.pop()
    if c == 'B':
        res[0].append(idx)
    else:
        res[1].append(idx)

for r in res:
    print(len(r))
    print(*r)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;우선순위큐를 사용하는 문제. 사실 큐를 사용하는 문제인줄 알고 한참을 헤매다가 다른 분의 풀이를 보고서야 이해했다..&lt;/p&gt;

&lt;p&gt;여기서 중요한 점은 두 가지다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;상민/지수가 포장을 시작할 수 있는 시간은 그 전 포장이 끝난 이후므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;maxb, maxr&lt;/code&gt; 변수를 통해 포장을 시작하는 시간 &lt;code class=&quot;highlighter-rouge&quot;&gt;t&lt;/code&gt;를 정의해 줄 것. 따라서 우선순위큐 &lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt;에는 상민/지수가 쉬지 않고 포장을 했을 때 포장이 끝나는 시간이 들어간다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;포장이 끝나는 시간이 같다면 상민이가 먼저 포장을 하기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt;를 정렬할 때 상민이가 더 뒤로가게(&lt;code class=&quot;highlighter-rouge&quot;&gt;pop&lt;/code&gt; 연산을 수행해야 하므로) 정렬해주는 과정을 거쳐야 한다. 그래서 &lt;code class=&quot;highlighter-rouge&quot;&gt;heapq&lt;/code&gt; 라이브러리를 사용하지 않았다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 28 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/01/28/BOJ-17225.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/01/28/BOJ-17225.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver5 - 요세푸스 문제</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1158&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1158&quot;&gt;백준 1158번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;문제&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;요세푸스 문제는 다음과 같다.&lt;/p&gt;

&lt;p&gt;1번부터 N번까지 N명의 사람이 원을 이루면서 앉아있고, 양의 정수 K(≤ N)가 주어진다. 이제 순서대로 K번째 사람을 제거한다. 한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 이 과정을 계속해 나간다. 이 과정은 N명의 사람이 모두 제거될 때까지 계속된다. 원에서 사람들이 제거되는 순서를 (N, K)-요세푸스 순열이라고 한다. 예를 들어 (7, 3)-요세푸스 순열은 &amp;lt;3, 6, 2, 7, 5, 1, 4&amp;gt;이다.&lt;/p&gt;

&lt;p&gt;N과 K가 주어지면 (N, K)-요세푸스 순열을 구하는 프로그램을 작성하시오.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;입력&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;첫째 줄에 N과 K가 빈 칸을 사이에 두고 순서대로 주어진다. (1 ≤ K ≤ N ≤ 5,000)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;예시&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;입력&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;7 3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;출력&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;3, 6, 2, 7, 5, 1, 4&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n, k = map(int, input().split())
arr = [i for i in range(1, n+1)]

res = []
idx = k-1
while True:
    item = arr.pop(idx)
    res.append(str(item))
    if not arr:
        break
    # 길이가 1 줄었으므로 한 발 물러선다.
    idx = (idx-1) % len(arr)
    for _ in range(k):
        idx = (idx + 1) % len(arr)

print('&amp;lt;' + ', '.join(res) + '&amp;gt;')
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 28 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/01/28/BOJ-1158.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/01/28/BOJ-1158.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>프로그래머스 Lv1 추천문제 + 풀이 모음</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;추천문제&lt;/h2&gt;

&lt;p&gt;사실 코딩 수업을 들은 적이 있거나 독학한 적이 있으면 프로그래머스 Lv1은 손쉽게 풀 수 있다. 그리고 그 와중에서도 난이도 차이가 꽤나 많이 나서 추천문제만 모아보았다. 추천 문제들은 주로 구현 문제 또는 엣지 케이스에 잘 걸린다거나 효율성 테스트(시간복잡도 측정)에 걸리는 문제들이다. 그냥 내기준 다른 문제들보다 까다로운 문제들로 골라봤다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/64061&quot;&gt;크레인 인형뽑기 게임&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/72410&quot;&gt;신규 아이디 추천&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42862&quot;&gt;체육복&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12901&quot;&gt;2016년&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/68935&quot;&gt;3진법 뒤집기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12906&quot;&gt;같은 숫자는 싫어&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12915&quot;&gt;문자열 내 마음대로 정렬하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12921&quot;&gt;소수 찾기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12926&quot;&gt;시저 암호&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12930&quot;&gt;이상한 문자 만들기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/67256&quot;&gt;키패드 누르기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12982&quot;&gt;예산&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/17681&quot;&gt;[1차] 비밀지도&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42889&quot;&gt;실패율&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/17682&quot;&gt;[1차] 다트 게임&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;풀이&lt;/h2&gt;
&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons64061&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/64061&quot;&gt;크레인 인형뽑기 게임&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(board, moves):
    answer = 0
    n = len(board)
    stack = []
    for m in moves:
        for i in range(n):
            if board[i][m-1] != 0:
                stack.append(board[i][m-1])
                board[i][m-1] = 0
                # 인형삭제
                if len(stack) &amp;gt;= 2 and stack[-1] == stack[-2]:
                    stack.pop()
                    stack.pop()
                    answer += 2
                break
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons68644&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/68644&quot;&gt;두 개 뽑아서 더하기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(numbers):
    answer = set()
    for i in range(len(numbers)):
        for j in range(i+1, len(numbers)):
            answer.add(numbers[i]+numbers[j])
    answer = sorted(answer)
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;set 자료형으로 중복된 값이 삽입되지 않게 구현하였다. 시간복잡도는 $n^2 + n\log n \rightarrow O(n^2)$&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons42576&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42576&quot;&gt;완주하지 못한 선수&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(participant, completion):
    d = {}
    for p in participant:
        if p in d:
            d[p] += 1
        else:
            d[p] = 1
    
    for c in completion:
        d[c] -= 1
    
    for k in d:
        if d[k] != 0:
            answer = k
            break
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;dictionary 자료형을 이용해서 돔영이인도 처리해주었음. 시간복잡도는 $3n \rightarrow O(n)$&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons72410&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/72410&quot;&gt;신규 아이디 추천&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;import string

def solution(new_id):
    # 1. 대문자-&amp;gt;소문자
    new_id = new_id.lower()
    # 2. 유효하지 않은 문자 제거
    valid_str = list(string.ascii_lowercase) + list(map(str, range(10))) + ['-', '_', '.']
    valid_str = set(valid_str)
    tmp = ''
    for i in range(len(new_id)):
        # O(1)
        if new_id[i] in valid_str:
            tmp += new_id[i]
    new_id = tmp
    # 3. 마침표 두 번 치환
    tmp = ''
    i = 0
    while i &amp;lt; len(new_id):
        if new_id[i] != '.':
            tmp += new_id[i]
            i += 1
            continue
        j = i
        while j &amp;lt; len(new_id) and new_id[j] == '.':
            j += 1
        i = j
        tmp += '.'
    new_id = tmp
    # 4. 처음이나 끝 '.' 제거
    if len(new_id) &amp;gt; 0 and new_id[0] == '.':
        new_id = new_id[1:]
    if len(new_id) &amp;gt; 0 and new_id[-1] == '.':
        new_id = new_id[:-1]
    # 5. 빈 문자열이라면 'a' 대입
    if new_id == '':
        new_id = 'a'
    # 6. 길이가 16자 이상이라면 15개까지만
    if len(new_id) &amp;gt;= 16:
        new_id = new_id[:15]
        # 마지막 '.' 처리
        if new_id[-1] == '.':
            new_id = new_id[:-1]
    # 길이가 2자 이하라면
    if len(new_id) &amp;lt;= 2:
        ch = new_id[-1]
        while len(new_id) &amp;lt; 3:
            new_id += ch
    return new_id
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3번에서 마침표가 여러번 나오는 걸 하나의 마침표로 치환해주는게 조금 복잡해서 애먹은 문제..&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons42840&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42840&quot;&gt;모의고사&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(answers):
    answer = []
    st1 = [1, 2, 3, 4, 5]
    st2 = [2, 1, 2, 3, 2, 4, 2, 5]
    st3 = [3, 3, 1, 1, 2, 2, 4, 4, 5, 5]
    cnt1 = get_cnt(st1, answers)
    cnt2 = get_cnt(st2, answers)
    cnt3 = get_cnt(st3, answers)
    cnts = [cnt1, cnt2, cnt3]
    max_val = max(cnts)
    for i in range(3):
        if cnts[i] == max_val:
            answer.append(i+1)
    return answer

def get_cnt(st, answers):
    cnt = 0
    for i in range(len(answers)):
        if st[i % len(st)] == answers[i]:
            cnt += 1
    return cnt
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;k-httpsprogrammerscokrlearncourses30lessons42748&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42748&quot;&gt;K번째 수&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(array, commands):
    answer = []
    for c in commands:
        i, j, k = c
        tmp = array[i-1:j]
        tmp.sort()
        answer.append(tmp[k-1])
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons42862&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42862&quot;&gt;체육복&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(n, lost, reserve):
    students = [1] * (n+1)
    # 0번째 학생은 존재하지 않음
    students[0] = 0
    for l in lost:
        students[l] -= 1
    for r in reserve:
        students[r] += 1
    for r in reserve:
        # 여벌을 가지고 왔지만 도난당한 경우
        if students[r] == 1:
            continue
        if 1 &amp;lt;= r-1 and students[r-1] == 0:
            students[r-1] += 1
            students[r] -= 1
        elif r+1 &amp;lt;= n and students[r+1] == 0:
            students[r+1] += 1
            students[r] -= 1
    # 여벌을 가지고 왔지만 빌려주지 못한 경우를 위해 min 함수 적용
    students = [min(1, st) for st in students]
    return sum(students)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;생각보다 신경써야 할 케이스가 많아서 푸는데 시간이 좀 걸렸다.&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12901&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12901&quot;&gt;2016년&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(a, b):
    days = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']
    months = [0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
    # 월, 일, 요일
    month = day = 1
    now = 5
    while month != a or day != b:
        now = (now + 1) % len(days)
        day += 1
        # 한 달이 지나면
        if day &amp;gt; months[month]:
            day = 1
            month += 1 
    answer = days[now]
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;요일에 해당하는 배열과 각 달의 일수를 저장한 배열을 이용하면 어렵지 않은 문제였다.&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12903&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12903&quot;&gt;가운데 글자 가져오기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(s):
    answer = ''
    if len(s) % 2 == 1:
        answer = s[len(s)//2]
    else:
        answer = s[len(s)//2-1] + s[len(s)//2]
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons68935&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/68935&quot;&gt;3진법 뒤집기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(n):
    triple = ''
    while n &amp;gt;= 1:
        triple += str(n % 3)
        n //= 3

    i = len(triple)-1
    d = 1
    answer = 0
    while i &amp;gt;= 0:
        answer += int(triple[i]) * d
        d *= 3
        i -= 1
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;triple&lt;/code&gt;을 만들 때 이미 뒤집어져있으므로 바로 10진법으로 바꿔주면 된다.&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12906&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12906&quot;&gt;같은 숫자는 싫어&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(arr):
    answer = []
    i = 0
    while i &amp;lt; len(arr):
        j = i
        while j &amp;lt; len(arr) and arr[j] == arr[i]:
            j += 1
        answer.append(arr[i])
        i = j
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;슬라이딩 윈도우를 이용하여 풀어주었다.&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12910&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12910&quot;&gt;나누어 떨어지는 숫자 배열&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(arr, divisor):
    answer = []
    for a in arr:
        if a % divisor == 0:
            answer.append(a)
    
    if not answer:
        answer = [-1]
    answer.sort()
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12912&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12912&quot;&gt;두 정수 사이의 합&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(a, b):
    a, b = min(a, b), max(a, b)
    answer = 0
    for i in range(a, b+1):
        answer += i
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12915&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12915&quot;&gt;문자열 내 마음대로 정렬하기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(strings, n):
    answer = sorted(strings)
    answer = sorted(answer, key=lambda x: x[n])
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;쉬운 문제지만 인덱스 n으로 정렬하는 것이 사전순정렬보다 우선순위이기 때문에 &lt;strong&gt;직관과 반대로 먼저 사전순정렬을 해준 다음에 인덱스 n으로 정렬해야 한다.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;p-y-httpsprogrammerscokrlearncourses30lessons12916&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12916&quot;&gt;문자열 내 p와 y의 개수&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(s):
    s = s.lower()
    p_num = y_num = 0
    for ch in s:
        if ch == 'p':
            p_num += 1
        elif ch == 'y':
            y_num += 1
    return p_num == y_num
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12917&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12917&quot;&gt;문자열 내림차순으로 배치하기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(s):
    s = list(s)
    s.sort(reverse=True)
    answer = ''.join(s)
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12918&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12918&quot;&gt;문자열 다루기 기본&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(s):
    if not (len(s) == 4 or len(s) == 6):
        return False
    for ch in s:
        if not ch.isdigit():
            return False
    return True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;파이썬 string의 내장 메소드인 &lt;code class=&quot;highlighter-rouge&quot;&gt;isdigit()&lt;/code&gt;을 활용하면 더 쉽게 풀 수 있는 문제였다.&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12919&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12919&quot;&gt;서울에서 김서방 찾기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(seoul):
    idx = seoul.
    answer = &quot;김서방은 &quot; + str(idx) + &quot;에 있다&quot;
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12921&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12921&quot;&gt;소수 찾기&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;(틀린 코드)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(n):
    answer = 0
    for i in range(2, n+1):
        if is_prime(i):
            answer += 1
    return answer

def is_prime(n):
    i = 2
    while i*i &amp;lt;= n:
        if n % i == 0:
            return False
        i += 1
    return True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;이 문제는 일반적인 소수를 찾는 방법을 주어진 범위에 모두 적용하면 효율성 테스트에서 틀린다ㅠㅠ 따라서 보다 효율적인 알고리즘을 사용해야하는데, &lt;strong&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98_%EC%B2%B4#%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98_%EC%B2%B4%EB%A5%BC_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4%EB%A1%9C_%EA%B5%AC%ED%98%84&quot;&gt;에라토스테네스의 체&lt;/a&gt;&lt;/strong&gt;라는 알고리즘을 사용하면 된다.&lt;/p&gt;

&lt;p&gt;(맞는 코드)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(n):
    array = [True] * (n+1)
    # 0과 1은 소수가 아니다.
    array[:2] = [False] * 2
    i = 2
    while i*i &amp;lt;=  n:
        if array[i]:
            j = 2*i
            while j &amp;lt;= n:
                array[j] = False
                j += i
        i += 1
    answer = sum(array)
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12922&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12922&quot;&gt;수박수박수박수박수박수?&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(n):
    answer = ''
    arr = ['수', '박']
    for i in range(n):
        answer += arr[i % 2]
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12925&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12925&quot;&gt;문자열을 정수로 바꾸기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(s):
    return int(s)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;역시 코테는 파이썬이 짱인듯하다..&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons70128&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/70128&quot;&gt;내적&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(a, b):
    answer = 0
    for i in range(len(a)):
        answer += a[i] * b[i]
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12926&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12926&quot;&gt;시저 암호&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(s, n):
    answer = ''
    for ch in s:
        if ch == ' ':
            answer += ch
        # 소문자라면
        elif ord('a') &amp;lt;= ord(ch) &amp;lt;= ord('z'):
            tmp = ord(ch)+n
            if tmp &amp;gt; ord('z'):
                tmp -= 26
            answer += chr(tmp)
        # 대문자라면
        else:
            tmp = ord(ch)+n
            if tmp &amp;gt; ord('Z'):
                tmp -= 26
            answer += chr(tmp)
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;‘z’ 같은 경우에는 1을 더했을 때 ‘a’가 나와야 하므로 ‘z’보다 크면 26을 빼줘야하는게 이 문제의 핵심이었다.&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12928&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12928&quot;&gt;약수의 합&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(n):
    answer = 0
    for i in range(1, n+1):
        if n % i == 0:
            answer += i
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12930&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12930&quot;&gt;이상한 문자 만들기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(s):
    answer = ''
    i = 0
    for ch in s:
        if ch == ' ':
            answer += ch
            i  = 0
            continue
        if i % 2 == 0:
            answer += ch.upper()
        else:
            answer += ch.lower()
        i += 1
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;공백을 기준으로 단어를 분리해서 짝/홀수를 세어줘야 하기 때문에 공백을 만나면 &lt;code class=&quot;highlighter-rouge&quot;&gt;i=0&lt;/code&gt;이 된다.&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12931&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12931&quot;&gt;자릿 수 더하기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(n):
    answer = 0
    string = str(n)
    for ch in string:
        answer += int(ch)
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12932&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12932&quot;&gt;자연수 뒤집어 배열로 만들기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(n):
    string = str(n)[::-1]
    answer = []
    for ch in string:
        answer.append(int(ch))
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12933&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12933&quot;&gt;정수 내림차순으로 배치하기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(n):
    answer = 0
    lst = list(str(n))
    lst.sort(reverse=True)
    answer = int(''.join(lst))
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12934&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12934&quot;&gt;정수 제곱근 판별&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(n):
    i = 1
    x = -1
    while i*i &amp;lt;= n:
        if i*i == n:
            x = i
        i += 1
        
    if x == -1:
        answer = -1
    else:
        answer = (x+1) ** 2
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12935&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12935&quot;&gt;제일 작은 수 제거하기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(arr):
    min_val = min(arr)
    answer = [x for x in arr if x != min_val]
    if not answer:
        answer.append(-1)
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12937&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12937&quot;&gt;짝수와 홀수&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(num):
    if num % 2 == 0:
        answer = 'Even'
    else:
        answer = 'Odd'
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons67256&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/67256&quot;&gt;키패드 누르기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(numbers, hand):
    answer = ''
    # 왼손, 오른손 위치
    l = (3, 0)
    r = (3, 2)
    for n in numbers:
        if n in (1, 4, 7):
            answer += 'L'
            l = n//3, 0
        elif n in (3, 6, 9):
            answer += 'R'
            r = n//3-1, 2
        else:
            c = (n//3, 1)
            # 0인 경우 예외 처리
            if n == 0:
                c = (3, 1)
            l_dist = distance(l, c)
            r_dist = distance(r, c)
            if l_dist &amp;lt; r_dist:
                l = c
                answer += 'L'
            elif r_dist &amp;lt; l_dist:
                r = c
                answer += 'R'
            else: # 두 거리가 같을때
                if hand == 'left':
                    answer += 'L'
                    l = c
                else:
                    answer += 'R'
                    r = c
    return answer

def distance(a, b):
    return abs(a[0]-b[0])+abs(a[1]-b[1])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;numbers&lt;/code&gt;안에 있는 0을 따로 예외처리해줘야 한다. 그 부분만 빼면 평범한 구현문제인듯하다.&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12940&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12940&quot;&gt;최대공약수와 최소공배수&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(n, m):
    gcd = find_gcd(max(n, m), min(n, m))
    lcm = n * m / gcd
    answer = [gcd, lcm]
    return answer

def find_gcd(m, n):
    &quot;&quot;&quot;m has to be greater than or equal to n&quot;&quot;&quot;
    r = m % n
    while r &amp;gt; 0:
        m, n = n, r
        r = m % n
    return n
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12943&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12943&quot;&gt;콜라츠 추측&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(num):
    answer = 0
    while num != 1:
        answer += 1
        if num % 2 == 0:
            num //= 2
        else:
            num = num*3 + 1
        if answer &amp;gt;= 500:
            answer = -1
            break
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12944&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12944&quot;&gt;평균 구하기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(arr):
    cnt = len(arr)
    total = sum(arr)
    return total / cnt
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12947&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12947&quot;&gt;하샤드 수&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(x):
    d = 0
    x_str = str(x)
    for ch in x_str:
        d += int(ch)
    return x % d == 0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12948&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12948&quot;&gt;핸드폰 번호 가리기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(phone_number):
    answer = '*' * (len(phone_number)-4) + phone_number[-4:]
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12950&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12950&quot;&gt;행렬의 덧셈&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(arr1, arr2):
    answer = [[0] * len(arr1[0]) for _ in range(len(arr1))]
    for i in range(len(answer)):
        for j in range(len(answer[0])):
            answer[i][j] += (arr1[i][j] + arr2[i][j])
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;x---n-httpsprogrammerscokrlearncourses30lessons12954&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12954&quot;&gt;x만큼 간격이 있는 n개의 숫자&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(x, n):
    answer = [x*i for i in range(1, n+1)]
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12969&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12969&quot;&gt;직사각형 별찍기&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;a, b = map(int, input().strip().split(' '))
for i in range(b):
    for j in range(a):
        print('*', end='')
    print()
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12982&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12982&quot;&gt;예산&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(d, budget):
    answer = 0
    d.sort(reverse=True)
    while d:
        budget -= d.pop()
        if budget == 0:
            answer += 1
            break
        elif budget &amp;lt; 0:
            break
        answer += 1
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons17681&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/17681&quot;&gt;[1차] 비밀지도&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(n, arr1, arr2):
    answer = []
    for a, b, in zip(arr1, arr2):
        str1, str2 = bin(a)[2:], bin(b)[2:]
        # 공백처리
        if len(str1) &amp;lt; n:
            str1 = (n-len(str1)) * '0' + str1
        if len(str2) &amp;lt; n:
            str2 = (n-len(str2)) * '0' + str2
            
        tmp = ['#' if ch1 == '1' or ch2 == '1' else ' ' for 
              ch1, ch2 in zip(str1, str2)]
        answer.append(''.join(tmp))
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;파이썬 내장함수인 &lt;code class=&quot;highlighter-rouge&quot;&gt;bin&lt;/code&gt;을 사용하면 십진수를 이진법으로 쉽게 바꿔줄 수 있다. 또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;에 맞게 패딩처리도 해줘야한다.&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons42889&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42889&quot;&gt;실패율&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(N, stages):
    d = {i: 0 for i in range(1, N+1)}
    total = len(stages)
    cnt = 1
    stages.sort()
    prev = stages[0]
    for i in range(1, len(stages)):
        # 범위를 이미 넘어선 경우
        if prev &amp;gt; N:
            break
            
        # 딕셔너리 업데이트
        if stages[i] != prev:
            d[prev] = cnt / total
            total -= cnt
            cnt = 1
            prev = stages[i]
        # 마지막 원소까지 d에 있는 경우
        elif i == len(stages)-1 and prev in d:
            cnt += 1
            d[prev] = total / cnt
        else:
            cnt += 1
            
    # stable sort: reverse=True말고 -를 붙여주어야 한다.
    answer = sorted(d.keys(), key=lambda x: -d[x])
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stages&lt;/code&gt;를 정렬해주고 직전의 값과 비교해주면서 딕셔너리를 업데이트 해주었다. 이때 &lt;code class=&quot;highlighter-rouge&quot;&gt;stages&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt;보다 큰 값이 있을 수도 있으니 예외처리를 해주고, &lt;code class=&quot;highlighter-rouge&quot;&gt;[4, 4, 4, 4]&lt;/code&gt;같은 경우 마지막까지 범위안에 들어가므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;elif&lt;/code&gt;조건을 추가했다.&lt;/p&gt;

&lt;p&gt;마지막으로 &lt;em&gt;stable sort&lt;/em&gt;를 위해 파이썬의 내장함수인 &lt;code class=&quot;highlighter-rouge&quot;&gt;sorted&lt;/code&gt;를 사용했는데 &lt;code class=&quot;highlighter-rouge&quot;&gt;reverse=True&lt;/code&gt;를 옵션으로 줘버리면 &lt;em&gt;reverse stable sort&lt;/em&gt;가 되기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt; 파라미터에 마이너스(-)를 적용한 람다함수를 값으로 주었다.&lt;/p&gt;

&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons17682&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/17682&quot;&gt;[1차] 다트 게임&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(dartResult):
    answer = 0
    # 점수들을 담은 스택
    stack = []
    for i, ch in enumerate(dartResult):
        if ch.isdigit():
            # 숫자가 이어지는 경우
            if stack and dartResult[i-1].isdigit():
                stack.append(stack.pop()*10 + int(ch))
            else:
                stack.append(int(ch))
        elif ch in ('S', 'D', 'T'):
            if ch == 'S':
                m = 1
            elif ch == 'D':
                m = 2
            elif ch == 'T':
                m = 3
            # 점수를 바꿔준다.
            stack[-1]  = stack[-1] ** m
        else:
            # 스타상 처리
            if ch == '*':
                if len(stack) &amp;gt;= 2:
                    stack[-1] *= 2
                    stack[-2] *= 2
                else:
                    stack[-1] *= 2
            else: # 아차상 처리
                stack[-1] *= -1
        
    answer = sum(stack)
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;지금까지 획득한 점수들을 담은 배열을 스택으로 생각하고 처리해주면 되는 문제였다.&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Jan 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/01/25/Programmers-Lv1-1.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/01/25/Programmers-Lv1-1.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
  </channel>
</rss>
