<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Vision</title>
    <description>My personal blog for studying; mainly related to data
</description>
    <link>http://subong0508.github.io/</link>
    <atom:link href="http://subong0508.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 12 Feb 2021 02:04:02 +0900</pubDate>
    <lastBuildDate>Fri, 12 Feb 2021 02:04:02 +0900</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>프로그래머스 Lv3 - 단속카메라</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons42884&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42884&quot;&gt;프로그래머스 42884번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(routes):
    answer = 0
    routes.sort(key=lambda x: x[0])
    routes.sort(key=lambda x: x[1])
    cameras = []
    for r in routes:
        s, e = r
        done = False
        # 거꾸로 보는 것이 더 빠름
        for c in cameras[::-1]:
            if s &amp;lt;= c &amp;lt;= e:
                done = True
                break
        if not done:
            cameras.append(e)
    return len(cameras)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;괜히 어렵게 꼬아서 생각해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;heapq&lt;/code&gt; 쓰고 그랬는데 그냥 간단하게 풀 수 있는 문제였다. 꼬아서 생각하는 버릇좀 고쳐야지..&lt;/p&gt;
</description>
        <pubDate>Thu, 11 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/11/PR-42884.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/11/PR-42884.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold4 - 순회강연</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem2109&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2109&quot;&gt;백준 2109번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
arr = [-1] * n
for i in range(n):
    p, d = map(int, input().split())
    arr[i] = (p, d)
# 강연비순으로 정렬
arr.sort(key=lambda x: x[0])
filled = [False] * 10001

res = 0
while arr:
    p, d = arr.pop()
    # 빈 날 있는지 찾아보기
    while d &amp;gt;= 1 and filled[d]:
        d -= 1
    # 순회강연을 할 수 있는 경우
    if d &amp;gt;= 1:
        filled[d] = True
        res += p

print(res)
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 11 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/11/BOJ-1209.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/11/BOJ-1209.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver1 - 통나무 건너뛰기</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem11497&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11497&quot;&gt;백준 11497번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;t = int(input())


def solution(n, arr):
    ans = [-1] * n
    arr.sort(reverse=True)
    l, r = 0, n-1
    i = 0
    while arr:
        x = arr.pop()
        if i % 2 == 0:
            ans[l] = x
            l += 1
        else:
            ans[r] = x 
            r -= 1
        i += 1
    max_len = 0
    for i in range(n):
        max_len = max(max_len, abs(ans[i]-ans[i-1]))
    return max_len   


res = [] 
for _ in range(t):
    n = int(input())
    arr = list(map(int, input().split()))
    res.append(solution(n, arr))

print(*res, sep='\n')
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 11 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/11/BOJ-11497.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/11/BOJ-11497.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold5 - 강의실 배정</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem11000&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11000&quot;&gt;백준 11000번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;import heapq

n = int(input())
arr = [-1] * n
for i in range(n):
    s, t = map(int, input().split())
    arr[i] = (s, t)
heapq.heapify(arr)

# 강의가 끝나는 시간만 저장하는 heap
h = [heapq.heappop(arr)[1]]
while arr:
    s, t = heapq.heappop(arr)
    # 강의실을 이어서 쓸 수 있다면 pop 후 새로운 end 시간 넣기
    if s &amp;gt;= h[0]:
        heapq.heappop(h)
        heapq.heappush(h, t)
    # 아니라면 그냥 새로운 end 시간 넣기
    else:
        heapq.heappush(h, t)

print(len(h))
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 11 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/11/BOJ-11000.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/11/BOJ-11000.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver3 - 수리공 항승</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1449&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1449&quot;&gt;백준 1449번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n, l = map(int, input().split())
arr = list(map(int, input().split()))
arr.sort()

cnt = 1
start = arr[0]-0.5
for i in range(1, n):
    end = arr[i]+0.5
    # 돌려막기 가능
    if end &amp;lt;= start+l:
        continue
    else: # 새로 테이프를 붙여야 한다.
        cnt += 1
        start = arr[i]-0.5

print(cnt)
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Tue, 09 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/09/BOJ-1449.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/09/BOJ-1449.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold4 - 단어 수학</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1339&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1339&quot;&gt;백준 1339번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
d = {}
for _ in range(n):
    word = input()
    for i in range(len(word)-1, -1, -1):
        d[word[i]] = d.get(word[i], 0) + 10 ** (len(word)-i-1)

d = sorted(d.items(), key=lambda x: -x[1])
total = 0
num = 9
for ch, cnt in d:
    total += num * cnt
    num -= 1

print(total)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;십진법의 특성을 생각해서 풀면된다. 예를 들어 &lt;code class=&quot;highlighter-rouge&quot;&gt;GCF+ACDEB&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;100*G+10*C+1*F+10000*A+1000*C+100*D+10*E+1*B&lt;/code&gt;로 풀어서 쓸 수 있으니 곱해지는 계수가 큰 것부터 단어에 계수를 매겨주면 그게 바로 최적해에 해당한다.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/09/BOJ-1339.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/09/BOJ-1339.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver3 - ATM</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem11399&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11399&quot;&gt;백준 11399번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
atm = list(map(int, input().split()))
atm.sort()

for i in range(1, n):
    atm[i] += atm[i-1]
    
print(sum(atm))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;그냥 정렬해서 풀면 되는 문제.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/09/BOJ-11399.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/09/BOJ-11399.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver1 - 동전 0, 동전 2</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem11047&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11047&quot;&gt;백준 11047번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n, k = map(int, input().split())
coins = [0] * n
for i in range(n):
    coins[i] = int(input())

cnt = 0
for i in range(n-1, -1, -1):
    tmp = k // coins[i]
    cnt += tmp
    k -= coins[i] * tmp

print(cnt)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;가장 큰 동전부터 고르면 되는 문제였다.&lt;/p&gt;

&lt;h3 id=&quot;httpswwwacmicpcnetproblem2294&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2294&quot;&gt;백준 2294번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n, k = map(int, input().split())
INF = int(1e9)
coins = [INF] * (1+k)
for _ in range(n):
    c = int(input())
    start = c 
    cnt = 0
    while start &amp;lt;= k:
        cnt += 1
        coins[start] = min(coins[start], cnt)
        start += c

for i in range(1, k+1):
    for j in range(i):
        coins[i] = min(coins[i], coins[j]+coins[i-j])

res = coins[k]
if res == INF:
    print(-1)
else:
    print(res)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;coins[i] = min(coins[i], coins[j]+coins[i-j])&lt;/code&gt; 이 부분이 가장 핵심적인 부분이었다.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/09/BOJ-11047.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/09/BOJ-11047.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>프로그래머스 Lv3 - N으로 표현</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons42895&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42895&quot;&gt;프로그래머스 42895번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def dfs(N, cur, number, cnt):
    global answer
    if cnt &amp;gt; 8:
        return
    if cur == number:
        answer = min(answer, cnt)
        return
    
    for i in range(1, 9):
        tmp = int(str(N) * i)
        dfs(N, cur + tmp, number, cnt+i)
        dfs(N, cur - tmp, number, cnt+i)
        dfs(N, cur * tmp, number, cnt+i)
        dfs(N, cur // tmp, number, cnt+i)

def solution(N, number):
    global answer
    answer = int(1e9)
    dfs(N, 0, number, 0)
    if answer == int(1e9):
        answer = -1
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;원래는 DP 문제지만 DFS로 풀었다. &lt;code class=&quot;highlighter-rouge&quot;&gt;tmp = int(str(N) * i)&lt;/code&gt; 이 부분을 못 찾아서 많이 헤맸던 문제.&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/08/PR-42895.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/08/PR-42895.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>프로그래머스 Lv2 - 위장</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons42578&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42578&quot;&gt;프로그래머스 42578번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(clothes):
    answer = 1
    d = {}
    for _, y in clothes:
        # 아무것도 안입는 수 포함
        d[y] = d.get(y, 1) + 1
    for k in d:
        answer *= d[k]
    answer -= 1
    return answer
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 08 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/08/PR-42578.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/08/PR-42578.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
  </channel>
</rss>
