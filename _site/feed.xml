<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Vision</title>
    <description>My personal blog for studying; mainly related to data
</description>
    <link>http://subong0508.github.io/</link>
    <atom:link href="http://subong0508.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 10 Feb 2021 02:57:42 +0900</pubDate>
    <lastBuildDate>Wed, 10 Feb 2021 02:57:42 +0900</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>백준 Silver3 - 수리공 항승</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1449&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1449&quot;&gt;백준 1449번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n, l = map(int, input().split())
arr = list(map(int, input().split()))
arr.sort()

cnt = 1
start = arr[0]-0.5
for i in range(1, n):
    end = arr[i]+0.5
    # 돌려막기 가능
    if end &amp;lt;= start+l:
        continue
    else: # 새로 테이프를 붙여야 한다.
        cnt += 1
        start = arr[i]-0.5

print(cnt)
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Tue, 09 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/09/BOJ-1449.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/09/BOJ-1449.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold4 - 단어 수학</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1339&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1339&quot;&gt;백준 1339번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
d = {}
for _ in range(n):
    word = input()
    for i in range(len(word)-1, -1, -1):
        d[word[i]] = d.get(word[i], 0) + 10 ** (len(word)-i-1)

d = sorted(d.items(), key=lambda x: -x[1])
total = 0
num = 9
for ch, cnt in d:
    total += num * cnt
    num -= 1

print(total)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;십진법의 특성을 생각해서 풀면된다. 예를 들어 &lt;code class=&quot;highlighter-rouge&quot;&gt;GCF+ACDEB&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;100*G+10*C+1*F+10000*A+1000*C+100*D+10*E+1*B&lt;/code&gt;로 풀어서 쓸 수 있으니 곱해지는 계수가 큰 것부터 단어에 계수를 매겨주면 그게 바로 최적해에 해당한다.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/09/BOJ-1339.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/09/BOJ-1339.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver3 - ATM</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem11399&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11399&quot;&gt;백준 11399번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
atm = list(map(int, input().split()))
atm.sort()

for i in range(1, n):
    atm[i] += atm[i-1]
    
print(sum(atm))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;그냥 정렬해서 풀면 되는 문제.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/09/BOJ-11399.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/09/BOJ-11399.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver1 - 동전 0, 동전 2</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem11047&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11047&quot;&gt;백준 11047번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n, k = map(int, input().split())
coins = [0] * n
for i in range(n):
    coins[i] = int(input())

cnt = 0
for i in range(n-1, -1, -1):
    tmp = k // coins[i]
    cnt += tmp
    k -= coins[i] * tmp

print(cnt)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;가장 큰 동전부터 고르면 되는 문제였다.&lt;/p&gt;

&lt;h3 id=&quot;httpswwwacmicpcnetproblem2294&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2294&quot;&gt;백준 2294번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n, k = map(int, input().split())
INF = int(1e9)
coins = [INF] * (1+k)
for _ in range(n):
    c = int(input())
    start = c 
    cnt = 0
    while start &amp;lt;= k:
        cnt += 1
        coins[start] = min(coins[start], cnt)
        start += c

for i in range(1, k+1):
    for j in range(i):
        coins[i] = min(coins[i], coins[j]+coins[i-j])

res = coins[k]
if res == INF:
    print(-1)
else:
    print(res)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;coins[i] = min(coins[i], coins[j]+coins[i-j])&lt;/code&gt; 이 부분이 가장 핵심적인 부분이었다.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/09/BOJ-11047.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/09/BOJ-11047.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>프로그래머스 Lv3 - N으로 표현</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons42895&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42895&quot;&gt;프로그래머스 42895번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def dfs(N, cur, number, cnt):
    global answer
    if cnt &amp;gt; 8:
        return
    if cur == number:
        answer = min(answer, cnt)
        return
    
    for i in range(1, 9):
        tmp = int(str(N) * i)
        dfs(N, cur + tmp, number, cnt+i)
        dfs(N, cur - tmp, number, cnt+i)
        dfs(N, cur * tmp, number, cnt+i)
        dfs(N, cur // tmp, number, cnt+i)

def solution(N, number):
    global answer
    answer = int(1e9)
    dfs(N, 0, number, 0)
    if answer == int(1e9):
        answer = -1
    return answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;원래는 DP 문제지만 DFS로 풀었다. &lt;code class=&quot;highlighter-rouge&quot;&gt;tmp = int(str(N) * i)&lt;/code&gt; 이 부분을 못 찾아서 많이 헤맸던 문제.&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/08/PR-42895.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/08/PR-42895.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>프로그래머스 Lv2 - 위장</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons42578&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42578&quot;&gt;프로그래머스 42578번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(clothes):
    answer = 1
    d = {}
    for _, y in clothes:
        # 아무것도 안입는 수 포함
        d[y] = d.get(y, 1) + 1
    for k in d:
        answer *= d[k]
    answer -= 1
    return answer
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 08 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/08/PR-42578.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/08/PR-42578.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>프로그래머스 Lv2 - 오픈채팅방</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons42888&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42888&quot;&gt;프로그래머스 42888번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(record):
    msgs = []
    user_d = {}
    for r in record:
        lst = r.split()
        if len(lst) == 2:
            continue
        action, uid, name = lst
        user_d[uid] = name
    
    for r in record:
        lst = r.split()
        if len(lst) == 2:
            _, uid = lst
            msg = user_d[uid] + &quot;님이 나갔습니다.&quot;
            msgs.append(msg)
        else:
            action, uid, name = lst
            if action == &quot;Enter&quot;:
                msg = user_d[uid] + &quot;님이 들어왔습니다.&quot;
                msgs.append(msg)
    return msgs
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/06/PR-42888.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/06/PR-42888.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>Heap with Python</title>
        <description>&lt;p&gt;힙이란 우선순위큐(Priority Queue)를 이진 트리로 구현한 자료구조 입니다.
힙의 삽입, 삭제 연산은 $O(\log n)$의 시간복잡도를 가집니다.&lt;/p&gt;

&lt;p&gt;힙은 파이썬 내장모듈인 &lt;code class=&quot;highlighter-rouge&quot;&gt;heapq&lt;/code&gt;를 이용해서 손쉽게 구현할 수 있습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;import heapq

arr = [4, 5, 6, 7, 9, 8, 3, 1, 2]
heapq.heapify(arr)

print(heapq.nsmallest(3, arr)) # 1 2 3
print(heapq.nlargest(3, arr)) # 7 8 9

while arr:
    print(heapq.heappop(arr)) # 1 2 3 4 5 6 7 8 9

data = [5, 4, 6, 3]
for d in data:
    heapq.heappush(arr, d)
    print(arr[0]) # 5 4 4 3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;파이썬의 &lt;code class=&quot;highlighter-rouge&quot;&gt;heapq&lt;/code&gt; 모듈은 최소힙만 지원하므로 최대힙을 구현하기 위해서는 각각의 값들에 -를 붙여서 넣어주고, &lt;code class=&quot;highlighter-rouge&quot;&gt;pop&lt;/code&gt; 연산을 수행할 때 다시 -1을 곱해주는 방법을 사용합니다.&lt;/p&gt;

&lt;p&gt;또한 &lt;strong&gt;Key &amp;amp; Value&lt;/strong&gt; 페어를 통해 힙을 구현할 수도 있습니다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;keys = [1, 2, 3]
values = ['hello', 'python', 'world']
data = list(zip(keys, values))
h = []
for k, v in data:
    # key, value 순서대로 넣어줌
    heapq.heappush(h, (k, v))

while h:
    k, v = heapq.heappop(h)
    print(&quot;Key: %d, Value: %s&quot; % (k, v)) # Key: 1, Value: hello / Key: 2, Value: python / Key: 3, Value: world /
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/data-structure/2021/02/06/Heap.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/data-structure/2021/02/06/Heap.html</guid>
        
        <category>sorting</category>
        
        <category>python</category>
        
        <category>data-structure</category>
        
        
        <category>Data-Structure</category>
        
      </item>
    
      <item>
        <title>백준 Gold4 - 생태학</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem4358&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/4358&quot;&gt;백준 4358번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;import sys

input = sys.stdin.readline

d = {}
cnt = 0
while True:
    line = input().rstrip()
    if not line:
        break
    cnt += 1
    d[line] = d.get(line, 0) + 1
d = sorted(d.items())

for k, v in d:
    print(&quot;%s %.4f&quot; % (k, 100*v/cnt))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;인풋을 이런식으로 받는 건 못봐서 좀 당황했다.;&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/06/BOJ-4358.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/06/BOJ-4358.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold3 - 중앙값 구하기</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem2696&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2696&quot;&gt;백준 2696번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;import heapq

t = int(input())

def get_median(n, arr):
    # median보다 작은 값들을 저장하는 최대 힙
    max_heap = []
    median = None
    # median보다 큰 값들을 저장하는 최소 힙
    min_heap = []
    res = []
    for i in range(1, n+1):
        if median is None:
            median = arr[i]
            res.append(median)
            continue
        if arr[i] &amp;lt; median:
            heapq.heappush(max_heap, -arr[i])
        else:
            heapq.heappush(min_heap, arr[i])
        if i % 2 == 1:
            # 큰 값들이 작은 값들보다 많을 때
            if len(min_heap) &amp;gt; len(max_heap):
                heapq.heappush(max_heap, -median)
                median = heapq.heappop(min_heap)
            # 작은 값들이 큰 값들보다 많을 때
            elif len(max_heap) &amp;gt; len(min_heap):
                heapq.heappush(min_heap, median)
                median = -heapq.heappop(max_heap)
            res.append(median)
    return res

answer = []
for _ in range(t):
    n = int(input())
    arr = [0] 
    q = n // 10 if n % 10 == 0 else n // 10 + 1
    for i in range(q):
        tmp = list(map(int, input().split()))
        arr.extend(tmp)
    res = get_median(n, arr)
    answer.append((len(res), res))

for num, lst in answer:
    print(num)
    print(*lst, sep=' ')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;중앙값을 저장하는 변수인 &lt;code class=&quot;highlighter-rouge&quot;&gt;median&lt;/code&gt;, 중앙값보다 작은 값들을 저장하는 배열인 &lt;code class=&quot;highlighter-rouge&quot;&gt;max_heap&lt;/code&gt;, 큰 값들을 저장하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;min_heap&lt;/code&gt;을 통해 풀었다.&lt;/p&gt;

&lt;p&gt;그래서 중앙값보다 작은 것들은 최대힙으로, 큰 것들은 최소힙으로 가는데 두 배열의 길이가 다를때는 중앙값을 크기가 더 작은 배열로 보내고, 크기가 더 큰 배열에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;pop&lt;/code&gt; 연산을 통해 새로운 중앙값을 빼오면 된다.&lt;/p&gt;

&lt;p&gt;새로운 중앙값을 빼올때 기존 중앙값보다 작은 배열의 최댓값 또는 기존 중앙값보다 큰 배열의 최솟값을 뽑아야 하므로 각각을 최대/최소힙으로 구현하였다.&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/02/06/BOJ-2696.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/02/06/BOJ-2696.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
  </channel>
</rss>
