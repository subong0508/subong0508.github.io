<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Vision</title>
    <description>My personal blog for studying; mainly related to data
</description>
    <link>http://subong0508.github.io/</link>
    <atom:link href="http://subong0508.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 15 Mar 2021 23:05:39 +0900</pubDate>
    <lastBuildDate>Mon, 15 Mar 2021 23:05:39 +0900</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>백준 Silver2 - 병사 배치하기</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem18353&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/18353&quot;&gt;백준 18353번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
arr = list(map(int, input().split()))

dp = [0] * n
for i in range(n):
    dp[i] = 1
    for j in range(i):
        if arr[i] &amp;lt; arr[j]:
            dp[i] = max(dp[i], dp[j]+1)

print(n-max(dp))
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 15 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/15/BOJ-18353.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/15/BOJ-18353.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver3 - 1로 만들기</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1463&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1463&quot;&gt;백준 1463번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
INF = int(1e9)
dp = [INF] * (n+1)
dp[1] = 0
for i in range(1, n+1):
    if i % 3 == 0 and 0 &amp;lt;= i // 3 &amp;lt;= n:
        dp[i] = min(dp[i], dp[i // 3]+1)
    if i % 2 == 0 and 0 &amp;lt;= i // 2 &amp;lt;= n:
        dp[i] = min(dp[i], dp[i // 2]+1)
    if 0 &amp;lt;= i-1 &amp;lt;= n:
        dp[i] = min(dp[i], dp[i-1]+1)

print(dp[n])
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 15 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/15/BOJ-1463.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/15/BOJ-1463.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver4 - 퇴사</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem14501&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/14501&quot;&gt;백준 14501번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
ts = [0] * (n+1)
ps = [0] * (n+1)
for i in range(1, n+1):
    t, p = map(int, input().split())
    ts[i] = t
    ps[i] = p

dp = [0] * (n+1)
for i in range(1, n+1):
    tmp = i+ts[i]-1
    # i번째 일을 할 수 있는 경우에만
    if tmp &amp;lt;= n:
        dp[tmp] = max(dp[tmp], ps[i])
        for j in range(1, i):
            dp[tmp] = max(dp[tmp], dp[j]+ps[i])
        
print(max(dp))
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 15 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/15/BOJ-14501.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/15/BOJ-14501.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold2 - 양팔저울</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem2629&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2629&quot;&gt;백준 2629번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
arr = list(map(int, input().split()))
m = int(input())
ws = list(map(int, input().split()))

dp = [[False] * 40001 for _ in range(n+1)]
dp[0][0] = True

for i in range(1, n+1):
    now = arr[i-1] # 현재 추의 무게
    for j in range(40001):
        if dp[i-1][j]:
            dp[i][j] = True
            tmp = [j-now, j+now, now-j, now+j]
            for t in tmp:
                if 0 &amp;lt;= t &amp;lt;= 40000:
                    dp[i][t] = True
                    
res = ['N'] * m
for i in range(m):
    if dp[n][ws[i]]:
        res[i] = 'Y'

print(*res)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;결국 구슬의 무게는 추들을 더하거나 빼서 만들어야 하기 때문에 위와 같은 점화식이 나온다.&lt;/p&gt;
</description>
        <pubDate>Sat, 13 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/13/BOJ-2629.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/13/BOJ-2629.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold3 - Dance Dance Revolution</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem2342&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2342&quot;&gt;백준 2342번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;import sys

input = sys.stdin.readline
arr = list(map(int, input().split()))
n = len(arr)

# 한 방향(x)에서 다른 방향(y)로 가는 가중치
weights = [
    [1, 2, 2, 2, 2], 
    [0, 1, 3, 4, 3],
    [0, 3, 1, 3, 4],
    [0, 4, 3, 1, 3],
    [0, 3, 4, 3, 1]
]

INF = int(1e9)
dp = [[[INF for _ in range(5)] for _ in range(5)] for _ in range(n)]
# 0 -&amp;gt; 첫번째(1, 2, 3, 4)는 무조건 2
dp[0][0][arr[0]] = 2
dp[0][arr[0]][0] = 2

for i in range(1, n):
    step = arr[i]
    for x in range(5):
        for y in range(5):
            if x == y: # x, y가 같은 곳에서는 올 수 없다.
                continue
            # x를 이동: x, y -&amp;gt; step, y
            dp[i][step][y] = min(dp[i][step][y], dp[i-1][x][y]+weights[x][step])
            # y를 이동: x, y -&amp;gt; x, step
            dp[i][x][step] = min(dp[i][x][step], dp[i-1][x][y]+weights[y][step])

res = INF
for i in range(5):
    res = min(res, dp[n-1][i][0])
    res = min(res, dp[n-1][0][i])

print(res)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3차원 DP로 겨우겨우 풀었다.&lt;/p&gt;
</description>
        <pubDate>Sat, 13 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/13/BOJ-2342.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/13/BOJ-2342.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold5 - 1학년</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem5557&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/5557&quot;&gt;백준 5557번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
arr = list(map(int, input().split()))

dp = [[0] * 21 for _ in range(n-1)]
dp[0][arr[0]] = 1
for i in range(1, n-1):
    num = arr[i]
    for j in range(21):
        if dp[i-1][j] != 0:
            if 0 &amp;lt;= j+num &amp;lt;= 20:
                dp[i][j+num] += dp[i-1][j]
            if 0 &amp;lt;= j-num &amp;lt;= 20:
                dp[i][j-num] += dp[i-1][j]

print(dp[n-2][arr[n-1]]) 
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Fri, 12 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/12/BOJ-5557.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/12/BOJ-5557.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold4 - 색상환</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem2482&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2482&quot;&gt;백준 2482번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
k = int(input())

# 0번째와 n-1번째 모두 넣을수도, 안 넣을수도 있는 dp 테이블
dp1 = [[0] * (n+1) for _ in range(n)]
for i in range(n):
    dp1[i][0] = 1
for i in range(n):
    dp1[i][1] = i+1

# 0번째와 n-1번째 모두 넣는 테이블
dp2 = [[0] * (n+1) for _ in range(n)]
for i in range(n):
    dp2[i][0] = 1
    dp2[i][1] = 1

for i in range(2, n):
    for j in range(2, n+1):
        dp1[i][j] = dp1[i-1][j]+dp1[i-2][j-1]
        # n-1번째 항상 포함
        if i == n-1:
            dp2[i][j] = dp2[i-2][j-1]
        else:
            dp2[i][j] = dp2[i-1][j]+dp2[i-2][j-1]

for j in range(2, k+1):
    dp1[n-1][j] -= dp2[n-1][j]

print(dp1[n-1][k] % int(1e9+3))
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Fri, 12 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/12/BOJ-2482.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/12/BOJ-2482.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold3 - 욕심쟁이 판다</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1937&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1937&quot;&gt;백준 1937번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
graph = [[] for _ in range(n)]
for i in range(n):
    graph[i] = list(map(int, input().split()))

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]
dp = [[-1] * n for _ in range(n)] # 최대한 오래 살 수 있는 날들

def dfs(x, y):
    if dp[x][y] != -1: # already visited
        return dp[x][y]
    dp[x][y] = 1
    for i in range(4):
        nx, ny = x+dx[i], y+dy[i]
        if 0 &amp;lt;= nx &amp;lt; n and 0 &amp;lt;= ny &amp;lt; n and graph[nx][ny] &amp;gt; graph[x][y]:
            dp[x][y] = max(dp[x][y], dfs(nx, ny)+1)
    return dp[x][y]

res = 0
for i in range(n):
    for j in range(n):
        res = max(res, dfs(i, j))
        
print(res)
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Fri, 12 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/12/BOJ-1937.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/12/BOJ-1937.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold2 - 가장 긴 증가하는 부분 수열 2</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem12015&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/12015&quot;&gt;백준 12015번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;import sys
from bisect import bisect_left

input = sys.stdin.readline

n = int(input())
arr = list(map(int, input().split()))

stack = []
for i in range(n):
    if not stack or arr[i] &amp;gt; stack[-1]:
        stack.append(arr[i])
    else:
        stack[bisect_left(stack, arr[i])] = arr[i]

print(len(stack))
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Fri, 12 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/12/BOJ-12015.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/12/BOJ-12015.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Gold3 - LCS</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem9251&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/9251&quot;&gt;백준 9251번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;str1 = input()
str2 = input()
n = len(str1)
m = len(str2)

dp = [[0] * (m+1) for _ in range(n+1)]
for i in range(1, n+1):
    for j in range(1, m+1):
        if str1[i-1] == str2[j-1]:
            dp[i][j] = dp[i-1][j-1]+1
        else:
            dp[i][j] = max(dp[i-1][j], dp[i][j-1])

print(dp[n][m])
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 11 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/11/BOJ-9251.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/11/BOJ-9251.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
  </channel>
</rss>
