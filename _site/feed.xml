<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Vision</title>
    <description>My personal blog for studying; mainly related to data
</description>
    <link>http://subong0508.github.io/</link>
    <atom:link href="http://subong0508.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 09 Mar 2021 18:45:31 +0900</pubDate>
    <lastBuildDate>Tue, 09 Mar 2021 18:45:31 +0900</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>프로그래머스 Lv2 - 가장 큰 정사각형 찾기</title>
        <description>&lt;h3 id=&quot;httpsprogrammerscokrlearncourses30lessons12905&quot;&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12905&quot;&gt;프로그래머스 12905번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;def solution(board):
    answer = board[0][0]
    n, m = len(board), len(board[0])
    for j in range(1, m):
        for i in range(1, n):
            if board[i][j] == 1:
                board[i][j] = min([board[i-1][j-1], board[i-1][j], board[i][j-1]])+1
            answer = max(answer, board[i][j])
    return answer ** 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;점화식을 못 찾아서 한참 헤매다가 다른 분의 풀이를 보고서야 이해했다.
다시 풀어봐야지..&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/09/PR-12905.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/09/PR-12905.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver1 - 전깃줄</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem2565&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2565&quot;&gt;백준 2565번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
d = {}
for _ in range(n):
    k, v = map(int, input().split())
    d[k] = v
arr = sorted(d, key=lambda x: d[x])

dp = [0] * n
for i in range(n):
    dp[i] = 1
    for j in range(i):
        if arr[i] &amp;gt; arr[j]:
            dp[i] = max(dp[i], dp[j]+1)

print(len(arr)-max(dp))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;가장 긴 증가하는 부분 수열 알고리즘으로 바꿔서 풀 수 있는 문제였다.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/09/BOJ-2565.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/09/BOJ-2565.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver1 - 타일 채우기</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem2133&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2133&quot;&gt;백준 2133번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())

arr = [1, 0, 3]
for i in range(3, n+1):
    if i % 2 == 1:
        arr.append(0)
    else:
        tmp = arr[i-2] * 3
        j = i-4
        # 새로운 모양이 계속 추가된다.
        while j &amp;gt;= 0:
            tmp += arr[j] * 2
            j -= 2
        arr.append(tmp)

print(arr[n])
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Tue, 09 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/09/BOJ-2133.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/09/BOJ-2133.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver1 - 정수 삼각형</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1932&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1932&quot;&gt;백준 1932번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
arr = [[] for _ in range(n)]
for i in range(n):
    arr[i] = list(map(int, input().split()))

for i in range(1, n):
    arr[i][0] += arr[i-1][0]
    for j in range(1, i):
        arr[i][j] += max(arr[i-1][j-1], arr[i-1][j])
    arr[i][-1] += arr[i-1][-1]

print(max(arr[-1]))
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Tue, 09 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/09/BOJ-1932.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/09/BOJ-1932.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver1 - 동전 2</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem2294&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2294&quot;&gt;백준 2294번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n, k = map(int, input().split())
coins = set()
for i in range(n):
    coins.add(int(input()))

INF = int(1e9)
money = [INF] * (k+1)
for c in coins:
    if c &amp;lt;= k:
        money[c] = 1 # 동전 1개로 만들 수 있는 금액

for i in range(1, k+1): # 현재 만들고자 하는 금액: i
    for j in range(1, i):
        money[i] = min(money[i], money[j] + money[i-j])

if money[k] == INF:
    print(-1)
else:
    print(money[k])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;한 달 전에도 풀었떤 문제인데, 그때는 DP인지도 모르고 DP로 풀었다. 
풀었던 문제도 다시 보면 새롭다..&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/08/BOJ-2294.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/08/BOJ-2294.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver1 - RGB거리</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1149&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1149&quot;&gt;백준 1149번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;틀린 풀이(시간초과)&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
board = [[0] * 3 for _ in range(n)]
for i in range(n):
    board[i] = list(map(int, input().split()))

INF = int(1e9)
res = INF

def solution(i, prev, val):
    global res
    if i == n:
        res = min(res, val)
        return

    for j in range(3):
        if j == prev:
            continue
        solution(i+1, j, val+board[i][j])

solution(0, -1, 0)

print(res)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;일반 재귀 함수로 풀었더니 50% 쯤에서 시간 초과가 났다. 
그런데 생각해보니 2차원 DP로 풀 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;올바른 풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
board = [[0] * 3 for _ in range(n)]
for i in range(n):
    board[i] = list(map(int, input().split()))

INF = int(1e9)
for i in range(1, n):
    for j in range(3):
        min_val = INF
        for k in range(3):
            if k == j:
                continue
            if board[i-1][k] &amp;lt; min_val:
                min_val = board[i-1][k]
        board[i][j] += min_val

print(min(board[n-1]))
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 08 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/08/BOJ-1149.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/08/BOJ-1149.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver1 - 카드 구매하기</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem11052&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11052&quot;&gt;백준 11052번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
cards = [0] + list(map(int, input().split()))
money = [0] * (n+1)

# 초기화
for i in range(1, n+1): 
    money[i] = cards[i]

for i in range(1, n+1):
    for j in range(1, i):
        money[i] = max(money[i], money[j]+money[i-j])

print(money[n])
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 08 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/08/BOJ-11052.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/08/BOJ-11052.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver1 - 쉬운 계단 수</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem10844&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/10844&quot;&gt;백준 10844번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())
arr = [0] + [1] * 9

for i in range(1, n):
    now = [0] * 10
    for j in range(10):
        if j == 0:
            if i &amp;gt;= 2:
                now[1] += arr[j]
        elif j == 9:
            now[8] += arr[j]
        else:
            a, b = j-1, j+1
            now[a] += arr[j]
            now[b] += arr[j]
    arr = now

print(sum(arr) % int(1e9))
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 08 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/08/BOJ-10844.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/08/BOJ-10844.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver3 - 1, 2, 3 더하기</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem9095&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/9095&quot;&gt;백준 9095번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;t = int(input())


def solution(n):
    if n == 1:
        return 1
    elif n == 2:
        return 2
    elif n == 3:
        return 4
    else:
        a, b, c = 1, 2, 4
        for _ in range(4, n+1):
            a, b, c = b, c, a+b+c
        return c


res = []
for _ in range(t):
    n = int(input())
    r = solution(n)
    res.append(r)

print(*res, sep='\n')
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sun, 07 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/07/BOJ-9095.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/07/BOJ-9095.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
      <item>
        <title>백준 Silver3 - 01 타일</title>
        <description>&lt;h3 id=&quot;httpswwwacmicpcnetproblem1904&quot;&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1904&quot;&gt;백준 1904번&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;풀이&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;n = int(input())

if n == 1:
    print(1)
elif n == 2:
    print(2)
else:
    d = 15746
    a, b = 1, 2
    for i in range(3, n+1):
        a, b = b % d, (a+b) % d
    print(b)
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sun, 07 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://subong0508.github.io/problem-solving/2021/03/07/BOJ-1904.html</link>
        <guid isPermaLink="true">http://subong0508.github.io/problem-solving/2021/03/07/BOJ-1904.html</guid>
        
        <category>python</category>
        
        <category>coding-test</category>
        
        <category>programmers</category>
        
        <category>boj</category>
        
        <category>baekjoon</category>
        
        
        <category>Problem-Solving</category>
        
      </item>
    
  </channel>
</rss>
